<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>妖言惑众</title>
  
  <subtitle>朝闻道，夕死可矣。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/child/"/>
  <updated>2017-11-07T14:15:24.039Z</updated>
  <id>http://yoursite.com/child/</id>
  
  <author>
    <name>SeaBaby</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iTerm 2 实用快捷键</title>
    <link href="http://yoursite.com/child/2017/11/02/iTerm%202%20%E5%AE%9E%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/child/2017/11/02/iTerm 2 实用快捷键/</id>
    <published>2017-11-02T15:47:44.000Z</published>
    <updated>2017-11-07T14:15:24.039Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fl9vptkwalj314m0eejv7.jpg" alt=""></p> <a id="more"></a><ul><li>⌘ + Click：可以打开文件，文件夹和链接</li><li>⌘ + n：新建窗口</li><li>⌘ + t：新建标签页</li><li>⌘ + w：关闭当前页</li><li>⌘ + 数字 &amp; ⌘ + 方向键：切换标签页</li><li>⌥⌘ + 数字：切换窗口</li><li>⌘ + enter：切换全屏</li><li>⌘ + d：左右分屏ß</li><li>⇧⌘ + d：上下分屏</li><li>⌘ + ;：自动补全历史记录</li><li>⇧⌘ + h：自动补全剪贴板历史</li><li>⌥⌘ + e：查找所有来定位某个标签页</li><li>⌘ + r &amp; ⌃ + l：清屏</li><li>⌘ + /：显示光标位置</li><li>⌥⌘ + b：历史回放</li><li>⌘ + f：查找，然后用 tab 和 ⇧ + tab 可以向右和向左补全，补全之后的内容会被自动复制， 还可以用 ⌥ + enter 将查找结果输入终端</li><li>选中即复制，鼠标中键粘贴</li></ul><p>很多快捷键都是通用的，和 Emace 等都是一样的</p><ul><li>⌃ + u：清空当前行</li><li>⌃ + a：移动到行首</li><li>⌃ + e：移动到行尾</li><li>⌃ + f：向前移动</li><li>⌃ + b：向后移动</li><li>⌃ + p：上一条命令</li><li>⌃ + n：下一条命令</li><li>⌃ + r：搜索历史命令</li><li>⌃ + y：召回最近用命令删除的文字</li><li>⌃ + h：删除光标之前的字符</li><li>⌃ + d：删除光标所指的字符</li><li>⌃ + w：删除光标之前的单词</li><li>⌃ + k：删除从光标到行尾的内容</li><li>⌃ + t：交换光标和之前的字符</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fl9vptkwalj314m0eejv7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://yoursite.com/child/categories/Mac/"/>
    
    
      <category term="iTem2" scheme="http://yoursite.com/child/tags/iTem2/"/>
    
  </entry>
  
  <entry>
    <title>密钥分发中心（KDC）</title>
    <link href="http://yoursite.com/child/2017/11/02/%E5%AF%86%E9%92%A5%E5%88%86%E5%8F%91%E4%B8%AD%E5%BF%83%EF%BC%88KDC%EF%BC%89/"/>
    <id>http://yoursite.com/child/2017/11/02/密钥分发中心（KDC）/</id>
    <published>2017-11-02T15:46:15.000Z</published>
    <updated>2017-11-07T14:17:11.959Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fl9vriv380j30rs0kuads.jpg" alt=""></p><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><blockquote><p>密钥分发中心是一种运行在物理安全服务器上的服务，KDC维护着领域中所有安全主体账户信息数据库。</p><p>与每一个安全主体的其他信息一起，KDC存储了仅安全主体和KDC知道的加密密钥，这个密钥也称长效密钥（主密钥），用于在安全主体和KDC之间进行交换。</p></blockquote> <a id="more"></a><blockquote><p>KDC是作为发起方和接收方共同信任的第三方，因为他维护者一个存储着该域中所有账户的账户数据库，也就是说，他知道属于每个账户的名称和派生于该账户密码的Master Key（主密钥）。而用于Alice和Bob相互认证的会话密钥就是由KDC分发的，下面详细讲解KDC分发会话密钥的过程。</p></blockquote><h3 id="分发会话密钥过程"><a href="#分发会话密钥过程" class="headerlink" title="分发会话密钥过程"></a>分发会话密钥过程</h3><p>1、首先客户端向KDC发送一个会话密钥申请。这个申请的内容可以简单概括为”我是某客户端，我需要个Session Key用于与某服务器通话“。</p><p>2、KDC在接收到这个请求的时候，生成一个会话密钥。为了保证这个会话密钥仅仅限于发送请求的客户端和它希望访问的服务器知道，KDC会为这个会话密钥生成两个副本，分别被客户端和服务器使用。然后从账户数据库中提取客户端和服务器的主密钥分别对这两个副本进行对称加密。对于服务器，与会话密钥一起被加密的还包含关于客户端的一些信息，以便对发起连接请求的客户端进行身份认证。</p><pre><code>注意：KDC不是直接把这两个会话密钥副本分发客户端和服务器的，因为如果这样做，对于服务器来说会出现下面两个问题。由于一个服务器会面对若干不同的客户端，而每个客户端都具有一个不同的Session Key。那么服务器就会为所有的客户端维护这样一个会话密钥的列表，这样对服务器来说工作量就非常 大了。由于网络传输的不确定性，可能会出现这样一种情况：客户端很快获得会话密钥用于副本，并将 这个会话密钥作为凭据随同访问请求发送到服务器，但是用于服务器的会话密钥却还没有收到，并且很 有可能这个会话密钥永远也到不了服务器端，这样客户端将永远得不到认证。为了解决这个问题， Kerberos将这两个被加密的副本一同发送给客户端，属于服务器的那份由客户端发送给服务器。因为 这两个会话密钥副本分别是由客户端和服务器端的主密钥加密的，所以不用担心安全问题。</code></pre><p>3、通过上面的过程，客户端实际上获得了两组信息：一个是通过自己主密钥加密的会话密钥；另一个是被Server的主密钥加密的数据包，包含会话密钥和关于自己的一些确认信息。在这个基础上，我们再来看看服务器是如何对客户端进行认证的。</p><p>4、客户端通过用自己的主密钥对KDC加密的会话密钥进行解密从而获得会话密钥，随后创建认证符（Authenticator，包括客户端信息和时间戳（Timestamp）），并用会话密钥对其加密。最后连同从KDC获得的、被服务器的主密钥加密过的数据包（客户端信息和会话密钥）一并发送到服务器端。我们把通过服务器的主密钥加密过的数据包称为服务票证（Session Ticket）。</p><p>5、当服务器接收到这两组数据后，先使用它自己的主密钥对服务票证进行解密，从而获得会话密钥。随后使用该会话密钥解密认证符，通过比较由客户端发送来的认证符中的客户端信息（Client Info）和服务票证中的客户端信息实现对客户端身份的验证。</p><p>双方进行了身份认证的同时也获得了会话密钥，那么双方可以进行会话了。</p><p>流程图如下：</p><p>客户端简称为Alice，服务端简称为Bob</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fk4ams2bxcj30tw0buab9.jpg" alt=""></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><a href="http://book.51cto.com/art/200907/140554.htm" target="_blank" rel="external">参考文章</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1fl9vriv380j30rs0kuads.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;简言&quot;&gt;&lt;a href=&quot;#简言&quot; class=&quot;headerlink&quot; title=&quot;简言&quot;&gt;&lt;/a&gt;简言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;密钥分发中心是一种运行在物理安全服务器上的服务，KDC维护着领域中所有安全主体账户信息数据库。&lt;/p&gt;
&lt;p&gt;与每一个安全主体的其他信息一起，KDC存储了仅安全主体和KDC知道的加密密钥，这个密钥也称长效密钥（主密钥），用于在安全主体和KDC之间进行交换。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://yoursite.com/child/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="KDC" scheme="http://yoursite.com/child/tags/KDC/"/>
    
      <category term="密钥" scheme="http://yoursite.com/child/tags/%E5%AF%86%E9%92%A5/"/>
    
  </entry>
  
  <entry>
    <title>对称密钥加密体系 — DES</title>
    <link href="http://yoursite.com/child/2017/11/02/%E5%AF%B9%E7%A7%B0%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86%E4%BD%93%E7%B3%BB%20%E2%80%94%20DES/"/>
    <id>http://yoursite.com/child/2017/11/02/对称密钥加密体系 — DES/</id>
    <published>2017-11-02T15:46:15.000Z</published>
    <updated>2017-11-07T14:21:30.596Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fl9vw8z8ijj30xc0m9413.jpg" alt=""></p><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><blockquote><p>对称密钥加密机制即对称密码体系，也称单玥密码体系和传统密码体系。对称密码体系通常分为两大类：分组密码（如DES、AES算法），另一类为序列密码（如RC4算法）。</p></blockquote> <a id="more"></a><blockquote><p>对称密码体系加密和解密时所用的密钥是相通的或者是类似的，即由加密密钥很容易推导出解密密钥，反之亦然。对称密钥加密，最大的优势是加/解密速度快，适合对大数据量进行加密，但密钥管理困难。</p><p>对于普通的对称密码学，加密运算与解密运算使用同样的密钥。通常使用的对称密钥加密算法比较简单高效，密钥剪短，破译极其困难，由于系统的保密性主要取决于密钥的安全性，，所以在公开的计算机网络上安全的传送和保护密钥时一个严峻的问题。<strong>而且由于对称密码学中双方使用相同的密钥，因此无法实现数据签名和不可否认性等功能。</strong></p></blockquote><h3 id="DES加密流程"><a href="#DES加密流程" class="headerlink" title="DES加密流程"></a>DES加密流程</h3><p>对于任意长的铭文，DES首先对其进行分组，使得每一组的长度为64位，然后分别对每个64位的铭文分组进行加密。对于每个64位长度的明文分组的加密过程如下：</p><p>1、初始置换：输入分组按照初始置换表重排次序，进行初始置换。</p><p>2、16轮循环：DES对经过初始置换的64位铭文进行16轮类似的子加密过程。每一轮的子加密过程要经过DES的f函数，其过程如下：</p><ul><li>将64位明文在中间分开，划为2部分，每部分32位，左半部分记为L，右半部分记为R，以下的操作都是对有半部分数据进行。</li><li><strong>扩展置换</strong>：扩展置换将32位的输入数据根据扩展置换表扩展称为48位输出数据。</li><li>异或运算：将48位的明文数据与48位的子密钥进行异或运算。</li><li><strong>S盒置换</strong>：S盒置换是非线性的，48位输入数据根据S盒置换表置换成为32位输出数据。</li><li>直接置换：S盒置换后的32位输出数据根据直接置换表进行直接置换。</li><li>经过直接置换的32位输出数据与本轮的L部分进行异或运算，结果作为下一轮子加密过程中的R部分。本轮的R部分直接作为下一轮子加密过程中的L部分。然后进行下一轮子加密过程，直到16轮全部完成。</li></ul><p>3、终结置换：按照终结置换表进行终结置换，64位输出就是密文。</p><h3 id="DES加密流程详解"><a href="#DES加密流程详解" class="headerlink" title="DES加密流程详解"></a>DES加密流程详解</h3><h4 id="DES的分组过程"><a href="#DES的分组过程" class="headerlink" title="DES的分组过程"></a>DES的分组过程</h4><p>DES是一种分组加密算法，所谓分组加密算法就是对一定大小的明文后密文来做加密或解密动作。在DES加密系统中，每次加密或解密的分组大小均为64位，所以DES没有密文扩充的问题。对大于64位的明文只要按每64位的一组进行切割，而对于小于64位的明文只要在后面补“0”即可。</p><p>DES所用的加密或解密密钥也是64位大小，但因其中有8个位时奇偶校验位，所有64位中真正起密钥作用的只有56位，密钥过短也是DES最大的缺点。</p><h4 id="初始置换"><a href="#初始置换" class="headerlink" title="初始置换"></a>初始置换</h4><p>经过分组后的64位明文分组将按照初始置换表重新排列次序，进行初始置换，置换方法如下：初始置换表从左到右，从上到下读取，如第一行第一列为58，意味着将原文分组中的第58位置换到第一位，初始置换表下一个数位50，意味着将原明文分组的第50位置置换到第2位，依次类推，将原明文分组的64位全部置换完成。</p><p>表1.1初始化置换表  </p><table><thead><tr><th>58</th><th>50</th><th>42</th><th>34</th><th>26</th><th>18</th><th>10</th><th>2</th></tr></thead><tbody><tr><td>60</td><td>52</td><td>44</td><td>36</td><td>28</td><td>20</td><td>12</td><td>4</td><td>62</td><td>54</td><td>46</td><td>38</td><td>30</td><td>22</td><td>14</td><td>6</td><td></td></tr><tr><td>64</td><td>56</td><td>48</td><td>40</td><td>32</td><td>24</td><td>16</td><td>8</td><td></td></tr><tr><td>57</td><td>49</td><td>41</td><td>33</td><td>25</td><td>17</td><td>9</td><td>1</td><td></td></tr><tr><td>59</td><td>51</td><td>43</td><td>35</td><td>27</td><td>19</td><td>11</td><td>3</td><td></td></tr><tr><td>61</td><td>53</td><td>45</td><td>37</td><td>29</td><td>21</td><td>13</td><td>5</td><td></td></tr><tr><td>63</td><td>55</td><td>47</td><td>39</td><td>31</td><td>23</td><td>15</td><td>7</td><td></td></tr></tbody></table><h4 id="扩展置换"><a href="#扩展置换" class="headerlink" title="扩展置换"></a>扩展置换</h4><p>32位的有半部分明文数据首先要进行扩展置换，扩展置换将32位输入数据扩展成为48位的输出数据，他有三个目的：第一，它产生了与子密钥同长度的数据以进行异或运算；第二，它提供劳务更长的结果，使得在以后的子加密过程中能进行压缩；第三，它产生雪崩效应，这也是扩展置换最主要的目的，使得输入的一位将影响两个替换，所以输出对输入的依懒性将传播的更快（雪崩效应）。其实我只明白第一和第三点。。。</p><p>扩展置换的置换方法与初始置换相同，只是置换表不同，扩展置换表如下所示：</p><p>表1.2 扩展置换表</p><table><thead><tr><th>32</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td></td></tr><tr><td>8</td><td>9</td><td>10</td><td>11</td><td>12</td><td>13</td><td></td></tr><tr><td>12</td><td>13</td><td>14</td><td>15</td><td>16</td><td>17</td><td></td></tr><tr><td>16</td><td>17</td><td>18</td><td>19</td><td>20</td><td>21</td><td></td></tr><tr><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td><td></td></tr><tr><td>24</td><td>25</td><td>26</td><td>27</td><td>28</td><td>29</td><td></td></tr><tr><td>28</td><td>29</td><td>30</td><td>31</td><td>32</td><td>1</td><td></td></tr></tbody></table><h4 id="异或运算"><a href="#异或运算" class="headerlink" title="异或运算"></a>异或运算</h4><p>扩展置换的48位输出数据与相应的子密钥进行按位异或运算。异或以后的48位结果将继续进行S盒置换。</p><h4 id="S盒置换"><a href="#S盒置换" class="headerlink" title="S盒置换"></a>S盒置换</h4><p>S盒置换是DES算法中最重要的部分，也是最关键的步骤，因为其他运算都是线性的，只有S盒置换是非线性的，它比DES中任何一步都提供了更好的安全性。</p><p>经过异或运算得到的48位输出数据要经过S盒置换，置换由8个盒完成，记为S盒，每个S盒都有6位输入，4位输出。这8个S盒是不同的，每个S盒置换方法如下图所示。使用方法如下：48位的输入分成8组，每组6位分别进入8个S盒。将每组的6位输入记为B0、B1、B2、B3、B4、B5，那么表中的行号由B0B5决定，而列号由B1B2B3B4决定。例如第一个分组位111000要进入第一个S盒S1，那么行号位B0B5,即10，化为十进制即2，即第二行；列号位1100（B1B2B3B4），即为第12列，第2行第12列在下表中的S1中查找位数据3，所有这个S和的4位输出就是3，化为二进制即0011.</p><p>表1.3 盒置换表</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fk2n2gkacbj30eq1paacq.jpg" alt=""></p><h4 id="直接置换"><a href="#直接置换" class="headerlink" title="直接置换"></a>直接置换</h4><p>S盒置换后的32位输出数据将进行直接置换，该置换把每个输入位映射到输出位，任意一位不能映射两次，不能略去。</p><h4 id="终结置换"><a href="#终结置换" class="headerlink" title="终结置换"></a>终结置换</h4><p>终结置换与初始置换相对应，都不影响DES的安全性，主要目的是为了更容易的将明文和密文数据以字节大小放入des的f算法或者DES芯片中。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>刚刚看计算机网络安全相关知识，这一部分不太明白，所以查了一下，自己顺便记录一下，有什么不对的，大家纠正。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tNc79ly1fl9vw8z8ijj30xc0m9413.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;简言&quot;&gt;&lt;a href=&quot;#简言&quot; class=&quot;headerlink&quot; title=&quot;简言&quot;&gt;&lt;/a&gt;简言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;对称密钥加密机制即对称密码体系，也称单玥密码体系和传统密码体系。对称密码体系通常分为两大类：分组密码（如DES、AES算法），另一类为序列密码（如RC4算法）。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://yoursite.com/child/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="KDC" scheme="http://yoursite.com/child/tags/KDC/"/>
    
      <category term="密钥" scheme="http://yoursite.com/child/tags/%E5%AF%86%E9%92%A5/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/child/2017/11/02/hello-world/"/>
    <id>http://yoursite.com/child/2017/11/02/hello-world/</id>
    <published>2017-11-02T13:10:07.846Z</published>
    <updated>2017-11-07T14:22:49.031Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fl9vx0z3xpj30l30bugll.jpg" alt=""></p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using <a id="more"></a>Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1fl9vx0z3xpj30l30bugll.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using
    
    </summary>
    
    
  </entry>
  
</feed>
