<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SeaBaby</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fengxru.cn/"/>
  <updated>2018-08-01T11:30:49.783Z</updated>
  <id>http://fengxru.cn/</id>
  
  <author>
    <name>SeaBaby</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>android studio 如何配置OpenCV的</title>
    <link href="http://fengxru.cn/android-studio-%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AEOpenCV%E7%9A%84/"/>
    <id>http://fengxru.cn/android-studio-如何配置OpenCV的/</id>
    <published>2018-08-01T11:29:12.000Z</published>
    <updated>2018-08-01T11:30:49.783Z</updated>
    
    <content type="html"><![CDATA[<hr><p><blockquote>讲解了如何在Android studio中配置opencv</blockquote></p><a id="more"></a><h3 id="android-studio-如何配置OpenCV的"><a href="#android-studio-如何配置OpenCV的" class="headerlink" title="android studio 如何配置OpenCV的"></a>android studio 如何配置OpenCV的</h3><p>前期准备工作，你需要在OpenCV官网下载指定的安装包，是OpenCV for Android类型的，如下图<br><img src="http://odl86bwkg.bkt.clouddn.com/a.png" alt=""></p><p>下载完后解压后的目录如下图：<br><img src="http://odl86bwkg.bkt.clouddn.com/b.png" alt=""></p><h4 id="只写java版的OpenCV环境配置"><a href="#只写java版的OpenCV环境配置" class="headerlink" title="只写java版的OpenCV环境配置"></a>只写java版的OpenCV环境配置</h4><p>现在将OpenCV引进android studio中</p><p>1、新建一个android 工程</p><p>2、点击File—&gt; New —&gt; Import Module<br>   如下图<img src="http://odl86bwkg.bkt.clouddn.com/c.png" alt=""></p><p>3、在第2步后，会弹出如下窗口<br><img src="http://odl86bwkg.bkt.clouddn.com/d.png" alt=""></p><p>4、找到OpenCV解压的路径，选择sdk/java文件夹，如下图<br><img src="http://odl86bwkg.bkt.clouddn.com/e.png" alt=""></p><p>5、之后直接点击Next —&gt; Finish。然后右击该项目—&gt; Open Module Settings —&gt; Dependencies —&gt; 点击右边的 加号 —&gt; Module dependency —&gt; 选择openCVLibrary310 —&gt; 点击 OK。如下图<br><img src="http://odl86bwkg.bkt.clouddn.com/g.png" alt=""><br><img src="http://odl86bwkg.bkt.clouddn.com/h.png" alt=""></p><p>6、此时项目可能报错，此时我们可以更新build.gradle文件。这是因为opencv-Android的在这里的bulid文件和项目中的不一样,将划红线部分的信息改为和app文件夹下的build.gradle中信息相一致，主要是修改以下四个参数的值：compileSdkVersion、buildToolsVersion、minSdkVersion、targetSdkVersion。如下图<br><img src="http://odl86bwkg.bkt.clouddn.com/k.png" alt=""><br><img src="http://odl86bwkg.bkt.clouddn.com/l.png" alt=""></p><p>7、复制libs文件夹中。在OpenCV的解压包中，将sdk/native/libs文件夹复制，粘贴到 Project视图下的<br>app —&gt; libs 下，然后双击打开 app —&gt; build.gradle 文件，在 android 模块中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sourceSets &#123;</div><div class="line">        main &#123;</div><div class="line">            jniLibs.srcDirs = [&apos;libs&apos;]</div><div class="line">            java.srcDirs = [&apos;src/main/java&apos;, &apos;src/main/java-gen&apos;]</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>要注意括号匹配，是填yunyong写在android模块下，而不是buildTypes模块下。填写完该代码后，该文件的右上方会有一个 Sync Now，点击就Ok了，此时返回android 视图，会发现多出一个jniLibs文件。</p><p>到此，第一种配置就完成了。当然可能大家对第7步有异议，其实也可以如下操作：<br>在OpenCV的解压包中，将sdk—&gt;native—&gt;libs文件夹复制，粘贴在Project视图下app—&gt;src—&gt;main目录下，并将其重命名为jniLibs。这种作法等同于我之前讲的。</p><h3 id="C-代码中配置OpenCV环境"><a href="#C-代码中配置OpenCV环境" class="headerlink" title="C++代码中配置OpenCV环境"></a>C++代码中配置OpenCV环境</h3><p>因为有时我们可能需要在android中编写C++代码，有时会在C++代码中调用OpenCV的库，这时候我们应该怎么配置呢？<br>因为android中编写C++代码是需要NDK的支持，其实自从android studio出了2.2版本后直接可以在创建工程时添加NDK支持了，添加之后main文件夹下会多出一个native-lib.cpp这个文件，如果只是为了一个简单的NDK接口，貌似这样就结束了，直接在该cpp文件下编程即可。</p><p>但是，如果使用第三方库，就得重新配置了。到目前为止，网上大半文章都是.mk的配置方法。android studio 2.2使用Cmake作为跨平台编译工具，创建完一个工程后，JNI的配置都是由Cmake来管理，在project文件夹下的CmakeList文件中。Cmake有自己的编写规则，最好去官网看一下语法。下面就开始C++配置OpenCV环境，你只需要在CmakeList文件中添加上这几句话就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">include_directories(/home/fxr/Android/OpenCV-android-sdk/sdk/native/jni/include)</div><div class="line">add_library(lib_opencv SHARED IMPORTED)</div><div class="line">set_target_properties(lib_opencv</div><div class="line">                      PROPERTIES IMPORTED_LOCATION</div><div class="line">                      /home/fxr/Android/OpenCV-android-sdk/sdk/native/libs/$&#123;ANDROID_ABI&#125;/libopencv_java3.so)</div></pre></td></tr></table></figure><p>将之前的target_link_libraties模块换成以下这个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">target_link_libraries( # Specifies the target library.</div><div class="line">                       native-lib</div><div class="line"></div><div class="line">                       # Links the target library to the log library</div><div class="line">                       # included in the NDK.</div><div class="line">                       $&#123;log-lib&#125;</div><div class="line">                       lib_opencv )</div></pre></td></tr></table></figure><p>这样应该就可以在C++文件中调用OpenCV的库了。</p><p><strong>注意：将其中的路径换成你自己的</strong></p><p>上面添加的几句话可以做如下解释：</p><blockquote><p>1 <figure class="highlight plain"><figcaption><span>#添加ffmpeg对应的头文件目录,```$&#123;pathToFFMPEG&#125;```为前面配置过的路径,可以替换为```include_directories(E:/ffmpeg/include)```这种路径格式</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&gt; 2 ```add_library( ffmpeg SHARED IMPORTED)``` #添加库文件，实际上就是引入so文件,IMPORT代表从第三方引入的意思</div><div class="line">&gt; </div><div class="line">3 ```set_target_properties( ffmpeg PROPERTIES IMPORTED_LOCATION $&#123;pathToProject&#125;/app/src/main/jniLibs/$&#123;ANDROID_ABI&#125;/libffmpeg.so```#这句话是ffmpeg对应的so文件,so文件是放到JNILibs这个文件夹中 </div><div class="line">&gt;</div><div class="line">4 ```target_link_libraries( $\&#123;log-lib&#125; native-lib ffmpeg)```#为native-lib加载ffmpeg库.</div><div class="line"></div><div class="line"></div><div class="line">这样配置好就可以在native-lib里调用ffmpeg模块了</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">##### 附加</div><div class="line">如果是自己编写的CPP文件，只需做如下变化</div></pre></td></tr></table></figure></p></blockquote><p>add_library(coreAlg SHARED src/main/cpp/coreAlg.cpp )#添加库文件,这种实际上是有AS给编译成so文件了<br>target_link_libraries(native-lib ${log-lib} coreAlg)#native-lib里调用coreAlg<br>```</p><p>参考：</p><p><a href="http://www.jianshu.com/p/7f0cc055c05f" target="_blank" rel="external">http://www.jianshu.com/p/7f0cc055c05f</a></p><p><a href="http://www.cnblogs.com/meadow-glog/p/6130568.html" target="_blank" rel="external">http://www.cnblogs.com/meadow-glog/p/6130568.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;

&lt;p&gt;&lt;blockquote&gt;讲解了如何在Android studio中配置opencv&lt;/blockquote&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="配置" scheme="http://fengxru.cn/categories/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Android studio" scheme="http://fengxru.cn/tags/Android-studio/"/>
    
      <category term="opencv" scheme="http://fengxru.cn/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装opencv3并在pycharm中运用</title>
    <link href="http://fengxru.cn/Mac%E5%AE%89%E8%A3%85opencv3%E5%B9%B6%E5%9C%A8python%E4%B8%AD%E8%BF%90%E7%94%A8/"/>
    <id>http://fengxru.cn/Mac安装opencv3并在python中运用/</id>
    <published>2018-08-01T02:22:33.000Z</published>
    <updated>2018-08-01T03:16:27.291Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fttzueoousj30zk0m8wk0.jpg" alt=""></p><blockquote><p>本文主要讲解了Mac中安装opencv3，并探索在python编译软件pycharm中如何使用opencv</p></blockquote><a id="more"></a><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>Mac</li><li>pycharm professional 2017.2</li></ul><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><blockquote><p>pycharm找不到<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">``` - python</div><div class="line">import cv2</div><div class="line">img = cv2.imread(&quot;1.jpg&quot;)</div><div class="line">cv2.namedWindow(&quot;Image&quot;)</div><div class="line">cv2.imshow(&quot;Image&quot;, img)</div><div class="line">cv2.waitKey(0)</div><div class="line">cv2.destroyAllWindows()</div></pre></td></tr></table></figure></p></blockquote><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="安装opencv"><a href="#安装opencv" class="headerlink" title="安装opencv"></a>安装opencv</h3><p>如果你还没有安装opencv，那么就要先安装opencv，只需要检查相关的文件夹是否有即可，或者在C++中调用以下opencv，如果能测试成功，即说明安装了opencv。如果没有安装，安装也很简单，因为我的是Mac，所以只需要以下一条命令即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install opencv3</div></pre></td></tr></table></figure><p>这样执行后，安装的便是opencv3.X系列。</p><h3 id="配置pycharm"><a href="#配置pycharm" class="headerlink" title="配置pycharm"></a>配置pycharm</h3><p>安装opencv3成功后，用命令行进入以下目录，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/lib/python3.6/site-packages/</div></pre></td></tr></table></figure><p>然后在命令行中，输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/Cellar/opencv/3.4.1_2/lib/python3.6/site-packages/cv2.cpython-36m-darwin.so</div></pre></td></tr></table></figure><p>这两条命令，你要根据你自己的对应的目录进行相应的更改。</p><p>执行完，你发现在<code>/usr/local/lib/python3.6/site-packages/</code>的目录下，在命令行中进入python3，发现调用cv2模块，能成功。而在其他目录下，引用cv模块，而不能成功。因为第二条命令，所以你在<code>/usr/local/lib/python3.6/site-packages/</code>目录下可以<code>import cv2</code>而不会出错。</p><p>所以，我们要在pycharm中把该路径加入到环境变量中。具体步骤如下：</p><ol><li>首先打开pycharm，点击“Edit Configurations”，如下图：<br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1ftu0pyb4kmj30bs048mx3.jpg" alt=""></li><li>打开“Edit Configurations”后，需要添加环境变量。点击“Environment variables”即红色箭头所指的按钮<br><img src="https://ws2.sinaimg.cn/large/006tNc79ly1ftu0tgdg9pj31kw0zr75s.jpg" alt=""></li><li>然后选择左下角的“加号”，添加环境变量，Name为“PYTHONPATH”，Value为“/usr/local/lib/python3.6/site-packages/”，此处Value需要改成你对应的目录。如下图：<br><img src="https://ws2.sinaimg.cn/large/006tNc79ly1ftu0vdzgihj30qg0tyjro.jpg" alt=""></li><li>此时依次点击OK，Apply，OK按钮关掉窗口，再次在pycharm中写下<code>import cv2</code>模块后，就可以随意的在python中使用opencv了。</li></ol><p><strong>注意：</strong>有时虽然你按照步骤在pycharm中配置好了opencv，在写下<code>import cv2</code>，pycharm也会提示错误，但是不用管它，直接用就好了，不妨碍你使用，如下图：<br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1ftu10yb89nj31kw04xdfs.jpg" alt=""></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>有任何问题，欢迎留言或者直接联系我！</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fttzueoousj30zk0m8wk0.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文主要讲解了Mac中安装opencv3，并探索在python编译软件pycharm中如何使用opencv&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="配置" scheme="http://fengxru.cn/categories/%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="opencv3" scheme="http://fengxru.cn/tags/opencv3/"/>
    
      <category term="python" scheme="http://fengxru.cn/tags/python/"/>
    
      <category term="pycharm" scheme="http://fengxru.cn/tags/pycharm/"/>
    
  </entry>
  
  <entry>
    <title>决策树分类算法</title>
    <link href="http://fengxru.cn/%E5%86%B3%E7%AD%96%E6%A0%91%E8%AE%B2%E8%A7%A3/"/>
    <id>http://fengxru.cn/决策树讲解/</id>
    <published>2018-06-01T02:12:04.000Z</published>
    <updated>2018-06-01T09:06:36.848Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frvgtbyzc5j312c0l6god.jpg" alt=""></p><a id="more"></a><h2 id="概念讲解"><a href="#概念讲解" class="headerlink" title="概念讲解"></a>概念讲解</h2><h3 id="分类与聚类"><a href="#分类与聚类" class="headerlink" title="分类与聚类"></a>分类与聚类</h3><blockquote class="question">在具体讲解分类和聚类算法之前，我们先了解一下什么是分类，什么是<span id="inline-purple">聚类</span>，以及它们常用的算法有哪些。<br>1. Classification(分类)，对于一个classifier，通常需要你告诉它<span id="inline-blue">这个东西被分为某某类</span>这样一些例子，理想情况下，一个classifier会从它得到的训练集中进行“学习”，从而具备对未知数据进行分类的能力，这种提供数据训练的过程一般叫做“Supervised Learning（监督学习）”。<br>2. Clustering（聚类），简单的说就是把相似的东西分到一组，聚类的时候，我们不关心某一类是什么，我们需要实现的目标只是把相似的东西聚到一起。因此一个聚类算法通常只需要知道如何计算相似度就可以开始工作了，因此clustering通常不需要使用训练数据进行学习，这种叫做“Unsupervised Learning（无监督学习）”<br></blockquote><ul><li><p>分类：简单地说，就是根据文本的特征或属性，划分到已有的类别中。也就是说，这些类别是已知的，通过对已知分类的数据进行训练和学习，找到这些不同类的特征，再对未分类的数据进行分类。<span id="inline-green">常用算法</span>：决策树、朴素贝叶斯，支持向量机，神经网络，k-最近邻，模糊分类</p></li><li><p>聚类：简单地说，就是你压根不知道数据会分为几类，通过聚类分析将数据或者说用户聚合成几个群体，那就是聚类了。聚类不需要对数据进行训练和学习，一个聚类算法只要知道<span id="inline-green">如何计算相似度</span>就可以工作了。</p></li></ul><h3 id="什么是决策树"><a href="#什么是决策树" class="headerlink" title="什么是决策树"></a>什么是决策树</h3><p>所谓决策树，就是一种树，一种依托于策略抉择而建立的树。</p><blockquote class="question">机器学习中，决策树是一个预测模型；他代表的是对象属性与对象值之间的一种映射关系。树中每个节点表示某个对象，而每个分叉路径则代表的某个可能的属性值，而每个叶结点则对应从根节点到该叶节点所经历的路径所表示的对象的值。决策树仅有单一输出，若欲有复数输出，可以建立独立的决策树以处理不同输出。</blockquote><div class="alert-success"><i class="fa fa-lightbulb-o"></i> 从数据产生决策树的机器学习技术叫做决策树学习, 通俗点说就是决策树，说白了，这是一种依托于分类、训练上的预测树，根据已知预测、归类未来。</div><p>来理论的太过抽象，下面举一个浅显易懂的例子：</p><pre><code>套用俗语，决策树分类的思想类似于找对象。现想象一个女孩的母亲要给这个女孩介绍男朋友，于是有了下面的对话：  女儿：多大年纪了？  母亲：26。  女儿：长的帅不帅？  母亲：挺帅的。  女儿：收入高不？  母亲：不算很高，中等情况。  女儿：是公务员不？  母亲：是，在税务局上班呢。  女儿：那好，我去见见。</code></pre><p>   这个女孩的决策过程就是典型的分类树决策。相当于通过年龄、长相、收入和是否公务员对将男人分为两个类别：见和不见。假设这个女孩对男人的要求是：30岁以下、长相中等以上并且是高收入者或中等以上收入的公务员，那么这个可以用下图表示女孩的决策逻辑：</p><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frvh9sp0rwj30hp0f974k.jpg" alt=""></p><p>决策树是一种十分常用的分类方法，需要监管学习，监管学习就是给出一堆样本，每个样本都有一组属性和一个分类结果，也就是分类结果已知，那么通过学习这些样本得到一个决策树，这个决策树能够对新的数据给出正确的分类。</p><h2 id="相关算法"><a href="#相关算法" class="headerlink" title="相关算法"></a>相关算法</h2><h3 id="决策树学习之ID3算法"><a href="#决策树学习之ID3算法" class="headerlink" title="决策树学习之ID3算法"></a>决策树学习之ID3算法</h3><p>从信息论知识中我们知道<span id="inline-purple">期望信息越小，信息增益越大，从而纯度越高</span>。ID3的算法的核心思想就是<span id="inline-purple">以信息增益度量属性选择，选择分裂后信息增益</span>（后面会讲解什么是信息增益）<span id="inline-purple">最大的属性进行分裂</span></p><p>所以ID3的算法思想便是：</p><ol><li>自顶向下的贪婪搜索遍历可能的决策树空间构造决策树(此方法是ID3算法和C4.5算法的基础)；</li><li>从“哪一个属性将在树的根节点被测试”开始；</li><li>使用统计测试来确定每一个实例属性单独分类训练样例的能力，分类能力最好的属性作为树的根结点测试（<font size="1px">如何定义或者评判一个属性是分类能力最好的呢？这便是下文将要介绍的信息增益 or 信息增益率，这里要说的是信息增益和信息增益率是不同的,ID3基于信息增益来选择最好的属性，而接下来介绍的C4.5则是基于增益率来进行选择，这也是它进步的地方</font>）。</li><li>然后为根结点属性的每个可能值产生一个分支，并把训练样例排列到适当的分支（也就是说，样例的该属性值对应的分支）之下。</li><li>重复这个过程，用每个分支结点关联的训练样例来选取在该点被测试的最佳属性。</li></ol><p>这形成了对合格决策树的贪婪搜索，也就是算法从不回溯重新考虑以前的选择。</p><h4 id="实例讲解分析"><a href="#实例讲解分析" class="headerlink" title="实例讲解分析"></a>实例讲解分析</h4><p>回归决策树的基本知识，构建一个决策树主要有以下三个重要问题：</p><ol><li>数据是怎么分裂的</li><li>如何选择分类的属性</li><li>什么时候停止分裂</li></ol><p>从上述三个问题和ID3算法思想出发， 以一个实际例子对ID3算法进行讲解。</p><p><span id="inline-blue">问题描述</span>：我们统计了14天的气象数据(指标包括outlook，temperature，humidity，windy)，并已知这些天气是否打球(play)。如果给出新一天的气象指标据:sunny,cool,high,TRUE，判断一下会不会去打球。</p><p></p><p style="text-align:center;">table 1</p><p></p><table border="1"><tr>   <th>outlook</th>   <th>temperature</th>   <th>humidity</th>   <th>windy</th>   <th>play</th></tr><tr><td height="17" align="left">sunny</td><td align="left">hot</td><td align="left">high</td><td align="left">FALSE</td><td align="left">no</td></tr><tr><td height="17" align="left">sunny</td><td align="left">hot</td><td align="left">high</td><td align="left">TRUE</td><td align="left">no</td></tr><tr><td height="17" align="left">overcast</td><td align="left">hot</td><td align="left">high</td><td align="left">FALSE</td><td align="left">yes</td></tr><tr><td height="17" align="left">rainy</td><td align="left">mild</td><td align="left">high</td><td align="left">FALSE</td><td align="left">yes</td></tr><tr><td height="17" align="left">rainy</td><td align="left">cool</td><td align="left">normal</td><td align="left">FALSE</td><td align="left">yes</td></tr><tr><td height="17" align="left">rainy</td><td align="left">cool</td><td align="left">normal</td><td align="left">TRUE</td><td align="left">no</td></tr><tr><td height="17" align="left">overcast</td><td align="left">cool</td><td align="left">normal</td><td align="left">TRUE</td><td align="left">yes</td></tr><tr><td height="17" align="left">sunny</td><td align="left">mild</td><td align="left">high</td><td align="left">FALSE</td><td align="left">no</td></tr><tr><td height="17" align="left">sunny</td><td align="left">cool</td><td align="left">normal</td><td align="left">FALSE</td><td align="left">yes</td></tr><tr><td height="17" align="left">rainy</td><td align="left">mild</td><td align="left">normal</td><td align="left">FALSE</td><td align="left">yes</td></tr><tr><td height="17" align="left">sunny</td><td align="left">mild</td><td align="left">normal</td><td align="left">TRUE</td><td align="left">yes</td></tr><tr><td height="17" align="left">overcast</td><td align="left">mild</td><td align="left">high</td><td align="left">TRUE</td><td align="left">yes</td></tr><tr><td height="17" align="left">overcast</td><td align="left">hot</td><td align="left">normal</td><td align="left">FALSE</td><td align="left">yes</td></tr><tr><td height="17" align="left">rainy</td><td align="left">mild</td><td align="left">high</td><td align="left">TRUE</td><td align="left">no</td></tr></table><h4 id="现在我们用ID3算法来讲解："><a href="#现在我们用ID3算法来讲解：" class="headerlink" title="现在我们用ID3算法来讲解："></a>现在我们用ID3算法来讲解：</h4><h5 id="预备知识讲解："><a href="#预备知识讲解：" class="headerlink" title="预备知识讲解："></a>预备知识讲解：</h5><p><strong>1. 信息熵</strong><br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frvigb9fjrj30jy06daah.jpg" alt=""></p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1frvignfjhlj30k705lmxk.jpg" alt=""></p><p><strong>2. 信息增益</strong><br><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frvih3rgwij30n70duabc.jpg" alt=""></p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frvihd023qj30n40dudgy.jpg" alt=""></p><h5 id="决策树决策"><a href="#决策树决策" class="headerlink" title="决策树决策"></a>决策树决策</h5><p>决策树的形式类似于“如果天气怎么样，去玩；否则，怎么着怎么着”的树形分叉。那么问题是用哪个属性（即变量，如天气、温度、湿度和风力）最适合充当这颗树的根节点，在它上面没有其他节点，其他的属性都是它的后续节点。</p><p>那么借用上面所述的能够衡量一个属性区分以上数据样本的能力的“信息增益”（Information Gain）理论。</p><p>如果一个属性的信息增益量越大，这个属性作为一棵树的根节点就能使这棵树更简洁，比如说一棵树可以这么读成，如果风力弱，就去玩；风力强，再按天气、温度等分情况讨论，此时用风力作为这棵树的根节点就很有价值。如果说，风力弱，再又天气晴朗，就去玩；如果风力强，再又怎么怎么分情况讨论，这棵树相比就不够简洁了。</p><p>用熵来计算信息增益，如上图例子：</p><blockquote class="question">1. 计算分类系统的熵<br>类别是 "是否出去玩"。取值为yes的记录有9个，取值为no的有5个，即说这个样本里有9个正例，5个负例，记为S(9+,5-)，S是样本的意思(Sample)。那么P(c1) = 9/14, P(c2) = 5/14<br>这里熵记为Entropy(S),计算公式为：<br>$$ Entropy(S)= -\frac{9}{14}*log_2{\frac{9}{14}} - \frac{5}{14}*log_2{\frac{5}{14}} $$<br></blockquote><blockquote class="question">2. 分别以Wind、Humidity、Outlook和Temperature作为根节点，计算其信息增益<br>我们来计算Wind的信息增益:<br>当Wind固定为Weak时：记录有8条，其中正例6个，负例2个；同样，取值为Strong的记录6个，正例负例个3个。我们可以计算相应的熵为：<br>$$ Entropy(Weak)= -\frac{6}{8}*log_2{\frac{6}{8}} - \frac{2}{8}*log_2{\frac{2}{8}} $$$$ Entropy(Strong)= -\frac{3}{6}*log_2{\frac{3}{6}} - \frac{3}{6}*log_2{\frac{3}{6}} $$现在就可以计算出相应的信息增益了：$$ Gain(Wind)=Entropy(S)-\frac{8}{14}*Entropy(Weak)-\frac{6}{14}*Entropy(Strong)$$$$ =0.940-\frac{8}{14}*0.811-\frac{6}{14}*1.0=0.048 \qquad \quad $$<br>这个公式的奥秘在于，8/14是属性Wind取值为Weak的个数占总记录的比例，同样6/14是其取值为Strong的记录个数与总记录数之比。<br></blockquote><blockquote class="question">同理，如果以Humidity作为根节点：<br>$ Entropy(High)=0.985 $;\quad $ Entropy(Normal)=0.592$$$ Gain(Humidity)=0.940-\frac{7}{14}*Entropy(High)-\frac{7}{14}*Entropy(Normal)=0.151 $$以Outlook作为根节点：<br>$ Entropy(Sunny)=0.971 ; \quad Entropy(Overcast)=0.0 ; \quad Entropy(Rain)=0.971 $$$ Gain(Outlook)=0.940-\frac{5}{14}*Entropy(Sunny)-\frac{4}{14}*Entropy(Overcast)-\frac{5}{14}*Entropy(Rain)=0.247 $$以Temperature作为根节点：<br>$ Entropy(Cool)=0.811 ; \quad Entropy(Hot)=1.0 ; \quad Entropy(Mild)=0.918 $$$ Gain(Temperature)=0.940-\frac{4}{14}*Entropy(Cool)-\frac{4}{14}*Entropy(Hot)-\frac{6}{14}*Entropy(Mild)=0.029 $$这样我们就得到了以上四个属性相应的信息增益值：$ Gain(Wind)=0.048 ；\quad Gain(Humidity)=0.151 ；$<br>$ Gain(Outlook)=0.247 ；\quad Gain(Temperature)=0.029 $<br>最后按照信息增益最大的原则选Outlook为根节点。子节点重复上面的步骤。这颗树可以是这样的，它读起来就跟你认为的那样：<br></blockquote><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frvjlkyt8lj30et0btjrn.jpg" alt=""></p><div class="alert-danger"><i class="fa fa-bug"></i> ID3优点是理论清晰、方法简单、学习能力较强，但也存在一些缺点：<br>（1）只能处理分类属性的数据，不能处理连续的数据；<br>（2）划分过程会由于子集规模过小而造成统计特征不充分而停止；<br>（3）ID3算法在选择根节点和各内部节点中的分支属性时，采用信息增益作为评价标准。信息增益的缺点是       倾向于选择取值较多的属性，在有些情况下这类属性可能不会提供太多有价值的信息。</div><h3 id="C4-5算法讲解"><a href="#C4-5算法讲解" class="headerlink" title="C4.5算法讲解"></a>C4.5算法讲解</h3><blockquote class="question">这一个算法，就不讲解了，有一篇博客讲的特别好，推荐看一下。</blockquote><p><strong><a href="https://blog.csdn.net/zjsghww/article/details/51638126" target="_blank" rel="external">C4.5算法讲解博客地址：</a> </strong></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><div class="note primary"><p>因为最近要进行数据挖掘的课程考试，所以在复习（其实是预习...）时，进行总结。我是观看了几篇博客讲解后进行总结的，主要是为了记录我学到的，后面可以进行回头查阅，如能帮助到其他人，那再好不过了。</p></div><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h3><ol><li><a href="https://blog.csdn.net/qq_36330643/article/details/77415451" target="_blank" rel="external">分类算法之决策树ID3详解</a></li><li><a href="https://blog.csdn.net/u013668852/article/details/52935169" target="_blank" rel="external">决策树分类算法</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1frvgtbyzc5j312c0l6god.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://fengxru.cn/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://fengxru.cn/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="http://fengxru.cn/%E6%B5%8B%E8%AF%952/"/>
    <id>http://fengxru.cn/测试2/</id>
    <published>2018-05-28T05:12:04.000Z</published>
    <updated>2018-05-30T15:05:28.708Z</updated>
    
    <content type="html"><![CDATA[<span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="https://ws2.sinaimg.cn/large/006tNc79ly1frqzdt6v9vj31kw0l0q3z.jpg" class="full-image" alt="alt" title="介绍了hexo写博客时markdown中常用的小技巧"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span><a id="more"></a><h2 id="文本居中引用"><a href="#文本居中引用" class="headerlink" title="文本居中引用"></a>文本居中引用</h2><div class="note success"><p>Any content (support inline tags too).</p></div><table><tr><td bgcolor="LimeGreen"><font color="white" size="3">我是白色的字体，背景是色的~</font></td></tr></table><span class="label default">fairest creatures</span>  <span class="label primary">beauty's rose</span>  <span class="label info">bear his memory</span>  <span class="label default">abundance lies</span>  <p> <mark>sweet self too cruel</mark>  </p> <span class="label danger">tender churl mak'st waste in niggarding</span>   <span class="label warning">To eat the world's due, by the grave and thee</span>   <h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><div class="tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1">First unique name 1</a></li><li class="tab"><a href="#first-unique-name-2">First unique name 2</a></li><li class="tab"><a href="#first-unique-name-3">First unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div><hr><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><p>Usage: <span class="post-button text-center"><a class="btn" href="/path/to/url/" title="title"><i class="fa fa-icon [class]"></i>text</a></span></p><p>Alias: <span class="post-button text-center"><a class="btn" href="/path/to/url/" title="title"><i class="fa fa-icon [class]"></i>text</a></span></p><h3 id="Button-with-text"><a href="#Button-with-text" class="headerlink" title="Button with text"></a>Button with text</h3><span class="post-button text-center"><a class="btn" href="#">Text</a></span><span class="post-button text-center"><a class="btn" href="#">Text</a></span><span class="post-button text-center"><a class="btn" href="#" title="Title">Text & Title</a></span><h3 id="Button-with-icon"><a href="#Button-with-icon" class="headerlink" title="Button with icon"></a>Button with icon</h3><p><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home fa-5x"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home fa-4x"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home fa-3x"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home fa-2x"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home fa-lg"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home"></i></a></span></p><h3 id="Button-with-text-and-icon"><a href="#Button-with-text-and-icon" class="headerlink" title="Button with text and icon"></a>Button with text and icon</h3><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home"></i>Text & Icon (buggy)</a></span><p><br><br><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home fa-fw"></i>Text & Icon (fixed width)</a></span></p><p><br></p><p><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon</a></span><span class="post-button text-center"><a class="btn" href="#" title="Title"><i class="fa fa-home fa-fw fa-lg"></i>Text & Large Icon & Title</a></span></p><h3 id="Button-inside-other-tag"><a href="#Button-inside-other-tag" class="headerlink" title="Button inside other tag"></a>Button inside other tag</h3><div class="note default"><p><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-home fa-fw"></i>Text &amp; Icon</a></span><br><span class="post-button text-center"><a class="btn" href="#" title="Title"><i class="fa fa-home"></i></a></span><span class="post-button text-center"><a class="btn" href="#">Text</a></span></p></div><h3 id="Button-margin"><a href="#Button-margin" class="headerlink" title="Button margin"></a>Button margin</h3><div class="text-center"><span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-header"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-edge"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-times"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-circle-o"></i></a></span></span><span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-italic"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-scribd"></i></a></span></span><span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-google"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-chrome"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-opera"></i></a></span><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-diamond fa-rotate-270"></i></a></span></span></div><p><br></p><div class="text-center"><span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-adn fa-fw fa-lg"></i>Almost</a></span> <span class="post-button text-center"><a class="btn" href="#"><i class="fa fa-terminal fa-fw fa-lg"></i>Over</a></span></div><div class="text-right"><span class="post-button text-center"><a class="btn" href="#" title="Button tag test is finished."><i class="fa fa-check fa-fw fa-lg"></i>Test is finished.</a></span></div><p>参考文献：<a href="https://almostover.ru/2016-01/hexo-theme-next-test/" target="_blank" rel="external">https://almostover.ru/2016-01/hexo-theme-next-test/</a></p><hr><h2 id="组合应用"><a href="#组合应用" class="headerlink" title="组合应用"></a>组合应用</h2><div class="note success"><table><tr><td bgcolor="#7CCD7C">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. Pellentesque aliquet nibh nec urna. In nisi neque, aliquet vel, dapibus id, mattis vel, nisi. Sed pretium, ligula sollicitudin laoreet viverra, tortor libero sodales leo, eget blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti. Pellentesque fermentum dolor. Aliquam quam lectus, facilisis auctor, ultrices ut, elementum vulputate, nunc.<br><br>Sed egestas, ante et vulputate volutpat, eros pede semper est, vitae luctus metus libero eu augue. Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis. Vestibulum volutpat, lacus a ultrices sagittis, mi neque euismod dui, eu pulvinar nunc sapien ornare nisl. Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.</td></tr></table></div><h2 id="代码插入"><a href="#代码插入" class="headerlink" title="代码插入"></a>代码插入</h2><figure class="highlight java"><figcaption><span>java 文件所在位置： \blog </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> John Smith &lt;john.smith@example.com&gt;</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">package</span> l2f.gameserver.model;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">L2Char</span> <span class="keyword">extends</span> <span class="title">L2Object</span> </span>&#123;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Short ERROR = <span class="number">0x0001</span>;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveTo</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span> </span>&#123;</div><div class="line">    _ai = <span class="keyword">null</span>;</div><div class="line">    log(<span class="string">"Should not be called"</span>);</div><div class="line">    <span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">5</span>) &#123; <span class="comment">// wtf!?</span></div><div class="line">      <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h2 id="主题自带样式note标签"><a href="#主题自带样式note标签" class="headerlink" title="主题自带样式note标签"></a>主题自带样式note标签</h2><div class="note success"><p>且不问结果如何，尽自己之所能，积极的面对。</p></div><div class="note default"><p>default</p></div><div class="note primary"><p>primary</p></div><div class="note success"><p>Any content (support inline tags too).</p></div><div class="note info"><p>info</p></div><div class="note warning"><p>warning</p></div><div class="note danger"><p>danger</p></div><div class="note danger no-icon"><p>danger no-icon</p></div><h2 id="引用样式"><a href="#引用样式" class="headerlink" title="引用样式"></a>引用样式</h2><blockquote><p>内容</p></blockquote><blockquote class="question">内容</blockquote><p id="div-border-left-red">且不问结果如何，尽自己之所能，积极的面对。</p><p id="div-border-left-yellow">且不问结果如何，尽自己之所能，积极的面对。</p><p id="div-border-top-red">且不问结果如何，尽自己之所能，积极的面对。</p><p id="div-border-bottom-green">且不问结果如何，尽自己之所能，积极的面对。</p><p id="div-border-right-blue">且不问结果如何，尽自己之所能，积极的面对。</p><hr><h3 id="警告系列"><a href="#警告系列" class="headerlink" title="警告系列"></a>警告系列</h3><div class="alert-success"><i class="fa fa-lightbulb-o"></i> 本文旨在介绍样式的使用规则。</div><div class="alert-info"><i class="fa fa-info"></i> 本文旨在介绍样式的使用规则。</div><div class="alert-warning"><i class="fa fa-bell"></i> 本文旨在介绍样式的使用规则。</div><div class="alert-danger"><i class="fa fa-bug"></i> 本文旨在介绍样式的使用规则。</div><hr><p>Usage: <span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20=" title="nihao"><i class="fa fa-external-link"></i> 百度</span><br>Alias: <span class="exturl"><i class="fa fa-external-link"></i> text url title</span></p><hr><h2 id="主题自带样式-FontAwesome"><a href="#主题自带样式-FontAwesome" class="headerlink" title="主题自带样式 FontAwesome"></a>主题自带样式 FontAwesome</h2><ol><li><i class="fa fa-pencil">&lt;/i&gt; 支持 Markdown<br><i>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</i></i></li><li><i class="fa fa-cloud-upload">&lt;/i&gt; 一件部署<br><i>只需一条指令即可部署到 Github Pages，或其他网站。</i></i></li><li><i class="fa fa-cog">&lt;/i&gt; 丰富的插件<br><i>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade，CoffeeScript。</i></i></li></ol><p>采用的是 Font Awesome 的图标，下面给出一些简单的使用例子，更多请查看官网的使用示例。</p><ul><li><i class="fa fa-pencil"></i> 铅笔</li><li><i class="fa fa-cloud-upload"></i> 上传</li><li><p><i class="fa fa-download"></i> 下载</p></li><li><p><i class="fa fa-download"></i> 下载</p></li><li><i class="fa fa-download fa-lg"></i> 下载变大 33%</li><li><i class="fa fa-download fa-2x"></i> 下载两倍大</li></ul><hr><h3 id="增加下载图标"><a href="#增加下载图标" class="headerlink" title="增加下载图标"></a>增加下载图标</h3><p><a id="download" href="https://git-scm.com/download/win" target="_blank" rel="external"><i class="fa fa-download"></i><span> Download Now</span> </a></p><h3 id="视频连接"><a href="#视频连接" class="headerlink" title="视频连接"></a>视频连接</h3><p><a id="tube" href="https://www.youtube.com/watch?v=Gl23T9aOfoE" target="_blank" rel="external"><i class="fa fa-youtube-play"></i><span> YouTube </span></a></p><h3 id="添加emoji"><a href="#添加emoji" class="headerlink" title="添加emoji"></a>添加emoji</h3><p>😀😅</p><p>🙏</p><hr><h2 id="文字背景块样式"><a href="#文字背景块样式" class="headerlink" title="文字背景块样式"></a>文字背景块样式</h2><p><span id="inline-toc">1.</span></p><p><span id="inline-blue">啦啦啦啦</span></p><p><span id="inline-purple">啦啦啦啦</span></p><p><span id="inline-yellow">啦啦啦啦</span></p><p><span id="inline-green">啦啦啦啦</span></p><h2 id="插入PDF文档以及图片"><a href="#插入PDF文档以及图片" class="headerlink" title="插入PDF文档以及图片"></a>插入PDF文档以及图片</h2><p>插入PDF文档：<br>将相应的PDF文档放在与博客标题同名的文件夹内，然后再按照如下方式进行插入。</p><p>// 在/hexo/blog/public这个文件夹下找到你的博客同名的文件夹，然后将该文件放进去就可以在网页上访问了</p><p><a href="latex入门教程.pdf">点我，这里是PDF文档</a></p><h2 id="表格表头"><a href="#表格表头" class="headerlink" title="表格表头"></a>表格表头</h2><p>表格的表头使用<th>标签进行定义。<br>大多数浏览器会把表头显示为粗体居中的文本：</th></p><table border="1">    <tr>        <th>Header 1</th>        <th>Header 2</th>    </tr>    <tr>        <td>row 1, cell 1</td>        <td>row 1, cell 2</td>    </tr>    <tr>        <td>row 2, cell 1</td>        <td>row 2, cell 2</td>    </tr></table><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h2>]]></content>
    
    <summary type="html">
    
      &lt;span itemprop=&quot;image&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img itemprop=&quot;url image&quot; src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1frqzdt6v9vj31kw0l0q3z.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;介绍了hexo写博客时markdown中常用的小技巧&quot;&gt;&lt;meta itemprop=&quot;width&quot; content=&quot;auto&quot;&gt;&lt;meta itemprop=&quot;height&quot; content=&quot;auto&quot;&gt;&lt;/span&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://fengxru.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://fengxru.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 配置1--markdown文章常用功能</title>
    <link href="http://fengxru.cn/Hexo-%E9%85%8D%E7%BD%AE1-markdown%E6%96%87%E7%AB%A0%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD/"/>
    <id>http://fengxru.cn/Hexo-配置1-markdown文章常用功能/</id>
    <published>2018-05-28T05:12:04.000Z</published>
    <updated>2018-05-28T07:32:31.719Z</updated>
    
    <content type="html"><![CDATA[<span itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="https://ws2.sinaimg.cn/large/006tNc79ly1frqzdt6v9vj31kw0l0q3z.jpg" class="full-image" alt="alt" title="介绍了hexo写博客时markdown中常用的小技巧"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span><a id="more"></a><h2 id="文本居中引用"><a href="#文本居中引用" class="headerlink" title="文本居中引用"></a>文本居中引用</h2><blockquote><p>此标签将生成一个带上下分割线的引用，同时引用内文本将自动居中。 文本居中时，多行文本若长度不等，视觉上会显得不对称，因此建议在引用单行文本的场景下使用。 例如作为文章开篇引用 或者 结束语之前的总结引用。</p></blockquote><h4 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h4><ul><li><strong>HTML方式：</strong>使用这种方式时，给<code>img</code>添加属性<code>class=&quot;blockquote-center&quot;</code>即可。</li><li><strong>标签方式：</strong>使用<code>centerquote</code>或者简写<code>cq</code>。</li></ul><p> <img src="https://ws2.sinaimg.cn/large/006tNc79ly1frr1z2kpx8j318a0dojs8.jpg" alt=""></p><h4 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frr141ybcsj311i07waa0.jpg" alt=""></p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 标签别名 --&gt;</div><div class="line">&#123;% cq %&#125; </div><div class="line">人的一切痛苦，本质上都是对自己的无能的愤怒</div><div class="line"></div><div class="line">  </div><div class="line">&lt;font color=black size=4 face=&quot;黑体&quot;&gt;冯相如 </div><div class="line">&lt;/font&gt;</div><div class="line">&#123;% endcq %&#125;</div></pre></td></tr></table></figure><blockquote><p>这句话与签名者姓名（冯相如）中间间隔的行数越多（回车越多），则最后效果中间间隔就会越大。</p><p>至于签名者姓名，你可以用markdown中的字体大小颜色进行设置，如：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</div><div class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;</div><div class="line">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;</div><div class="line">&lt;font color=#0099ff size=12 face=&quot;黑体&quot;&gt;黑体&lt;/font&gt;</div><div class="line">&lt;font color=#00ffff size=3&gt;null&lt;/font&gt;</div><div class="line">&lt;font color=gray size=5&gt;gray&lt;/font&gt;</div></pre></td></tr></table></figure><p>但是不要误解，这句话不是我说的，我只不过是为了测试“标签签名”功能。</p><h2 id="Bootstrap-Callout"><a href="#Bootstrap-Callout" class="headerlink" title="Bootstrap Callout"></a>Bootstrap Callout</h2><h4 id="使用方式-1"><a href="#使用方式-1" class="headerlink" title="使用方式"></a>使用方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125;</div></pre></td></tr></table></figure><p>其中，<code>class_name</code>可以是以下列表中的一个值：</p><ul><li><code>default</code></li><li><code>primary</code></li><li><code>success</code></li><li><code>info</code></li><li><code>warning</code></li><li><code>danger</code> </li></ul><h4 id="效果示例"><a href="#效果示例" class="headerlink" title="效果示例"></a>效果示例</h4><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1frr27va9h5j311o0dgmxa.jpg" alt=""></p><p>对应代码如下；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;% note class_name %&#125; Content of class_name &#123;% endnote %&#125;</div><div class="line"></div><div class="line">&#123;% note default %&#125; Content of default &#123;% endnote %&#125;</div><div class="line"></div><div class="line">&#123;% note primary %&#125; Content of primary &#123;% endnote %&#125;</div></pre></td></tr></table></figure><h2 id="突破容器宽度限制的图片"><a href="#突破容器宽度限制的图片" class="headerlink" title="突破容器宽度限制的图片"></a>突破容器宽度限制的图片</h2><div class="note class_name"><p>当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）： </p></div><h4 id="使用方式-2"><a href="#使用方式-2" class="headerlink" title="使用方式"></a>使用方式</h4><ul><li>HTML方式：使用这种方式时，为<code>img</code>添加属性 <code>class=&quot;full-image&quot;</code>即可。</li><li>标签方式：使用<code>fullimage</code> 或者简写<code>fi</code>，并传递图片地址、 <code>alt</code> 和 <code>title</code> 属性即可。 属性之间以逗号分隔。</li></ul><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frr2ar14m7j31840dimxq.jpg" alt=""></p><h4 id="效果示例-1"><a href="#效果示例-1" class="headerlink" title="效果示例"></a>效果示例</h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frr2blr6bfj315y0vy77g.jpg" alt=""></p><h2 id="添加emoji表情"><a href="#添加emoji表情" class="headerlink" title="添加emoji表情"></a>添加emoji表情</h2><h4 id="使用方式-3"><a href="#使用方式-3" class="headerlink" title="使用方式"></a>使用方式</h4><div class="note class_name"><p>我的是Mac电脑，所以直接用快捷键，<code>control+command+space</code>调出表情框，然后点击输入即可；对于其他电脑，应该也可以直接搜到复制到markdown就好了。</p></div><h4 id="效果示例-2"><a href="#效果示例-2" class="headerlink" title="效果示例"></a>效果示例</h4><p>🤣😜🤨🤩😎🐸🚗❤️🇨🇳</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><div class="note class_name"><p>我会持续更新，今天先写到这儿，有什么不对，请指正。 </p></div><hr>]]></content>
    
    <summary type="html">
    
      &lt;span itemprop=&quot;image&quot; itemscope=&quot;&quot; itemtype=&quot;http://schema.org/ImageObject&quot;&gt;&lt;img itemprop=&quot;url image&quot; src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1frqzdt6v9vj31kw0l0q3z.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;介绍了hexo写博客时markdown中常用的小技巧&quot;&gt;&lt;meta itemprop=&quot;width&quot; content=&quot;auto&quot;&gt;&lt;meta itemprop=&quot;height&quot; content=&quot;auto&quot;&gt;&lt;/span&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://fengxru.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://fengxru.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>测试博客照片墙功能</title>
    <link href="http://fengxru.cn/photoPostName/"/>
    <id>http://fengxru.cn/photoPostName/</id>
    <published>2018-05-27T15:18:51.000Z</published>
    <updated>2018-05-30T12:06:14.480Z</updated>
    
    <summary type="html">
    
      测试照片功能，心情美美哒，亲爱的
    
    </summary>
    
      <category term="相册" scheme="http://fengxru.cn/categories/%E7%9B%B8%E5%86%8C/"/>
    
    
      <category term="照片" scheme="http://fengxru.cn/tags/%E7%85%A7%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow中的维度和shape的理解</title>
    <link href="http://fengxru.cn/TensorFlow%E4%B8%AD%E7%9A%84%E7%BB%B4%E5%BA%A6%E5%92%8Cshape%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>http://fengxru.cn/TensorFlow中的维度和shape的理解/</id>
    <published>2018-05-26T02:59:33.000Z</published>
    <updated>2018-05-27T14:57:43.677Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1frp7z57mjuj30p00fr0ta.jpg" alt=""></p><blockquote><p>TensorFlow 的名字已经说明了它最重要的两个概念—Tensor和Flow。Tensor就是张量，Flow翻译成中文就是“流”，它直观的表达了张量之间通过计算相互转化的过程。</p></blockquote><a id="more"></a><blockquote><p>Tensor在TensorFlow中是N维矩阵，所以涉及到Tensor的方法，也都是矩阵的处理。由于十多位，在TensorFlow中Tensor的流动过程就涉及到了升维降维。</p><p>该篇通过讲解Tensor张量中的shape的理解和一些接口的使用，来体会Tensor的维度概念。</p></blockquote><h2 id="理解TensorFlow的shape"><a href="#理解TensorFlow的shape" class="headerlink" title="理解TensorFlow的shape"></a>理解TensorFlow的shape</h2><blockquote><p>TensorFlow和python中的numpy库一样，读shape时应该从外向内读。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[1,2,3],[4,5,6]]</div></pre></td></tr></table></figure><p>和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[[1,2,3],</div><div class="line"> [4,5,6]]</div></pre></td></tr></table></figure><p>是一样的，都是2行三列(shape(2,3))。</p><p>这该怎么理解呢？首先拿掉最外层的中括号，变成了[1,2,3],[4,5,6]这两个元素，每个元素（如[1,2,3]）拿掉中括号后，剩下1，2，3这三个元素，所以shape=[2,3]。</p><p>也就是说<strong>shape是从外向内读，然后记录下每一层（即每一个中括号）的元素个数</strong>。</p><p>比如，shape=[1,1,2]，则表示的数据应该是这样的：[[[a,b]]].</p><h2 id="什么是维度？什么是轴（axis）？"><a href="#什么是维度？什么是轴（axis）？" class="headerlink" title="什么是维度？什么是轴（axis）？"></a>什么是维度？什么是轴（axis）？</h2><p>什么是维度？维基百科说：</p><blockquote><p>维度，又称维数，是数学中独立参数的数目。在物理学和哲学的领域内，指独立的时空坐标的数目。</p><p>0维是一个点，没有长度。1维是线，只有长度。2维是一个平面，是由长度和宽度（或曲线）形成面积。3维是2维加上高度形成的“体积面”。虽然一般人习惯了整数维，但在分形中维度不一定是整数，可能会是一个非整的有理数或者无理数。</p></blockquote><p>看上面的话，可能很费解，我也是！那么就接着往下看吧，会越来越简单的。</p><p>总结：<strong>维度是用来索引一个多维数组中某个具体数所需要最少的坐标数量。</strong></p><p>这句话很有深度，但是你多读几遍，加上下面的例子，你肯定会有自己的理解。</p><p>不同的维度的形式如下：</p><ul><li>0维，又称0维张量，数字，标量：1</li><li>1维，又称1维张量，数组，vector：[1,2,3]</li><li>2维，，又称2维张量，矩阵，二维数组：[[1,2],[3,4]]</li><li>3维，又称3维张量，立方，三维数组：[[[1,2],[3,4]],[[5,6],[7,8]]]</li><li>n维，你应该可以自己总结出来了吧！</li></ul><p><strong>再多的维只不过是把上一个维度当做自己的元素</strong></p><p>所以看一个张量是几维的，就看最深的数字外有几个中括号！</p><h3 id="什么是axis"><a href="#什么是axis" class="headerlink" title="什么是axis"></a>什么是axis</h3><blockquote><p><strong>axis 是多维数组每个维度的坐标</strong></p></blockquote><p>也就是说，对于[ [[1,2], [3,4]], [[5,6], [7,8]] ]这个3维情况，[[1,2],[[5,6]], [[3,4], [7,8]]这两个矩阵的axis是0，[1,2]，[3,4]，[5,6]，[7,8]这4个数组的axis是1，而1，2，3，4，5，6，7，8这8个数的axis是2。</p><h2 id="Tensor维度理解"><a href="#Tensor维度理解" class="headerlink" title="Tensor维度理解"></a>Tensor维度理解</h2><blockquote><p>这里通过<code>tf.reduce_mean</code>来理解一下维度</p></blockquote><h3 id="tf-reduce-mean"><a href="#tf-reduce-mean" class="headerlink" title="tf.reduce_mean"></a>tf.reduce_mean</h3><pre><code>reduce_mean(    input_tensor,    axis=None,    keep_dims=False,    name=None,    reduction_indices=None)</code></pre><p>计算Tensor各个维度元素的均值，这个方法是通过输入参数<code>axis</code>的维度上减少输入<code>input_tensor</code>的维度。</p><p>举个例子：</p><pre><code>x = tf.constant([1.,1.],[2.,2.])tf.reduce_mean(x)    # 1.5tf.reduce_mean(x,0)    # [1.5, 1.5]tf.reduce_mean(x,1)    # [1., 2.]</code></pre><p>x 是 <strong>二维数组</strong>：</p><ul><li>当<code>axis</code>参数取默认值时，计算整个数组的均值：(1.+1.+2.+2.)/4 = 1.5</li><li>当<code>axis</code>取0，意味着对<strong>列取均值</strong>：[1.5, 1.5]</li><li>当<code>axis</code>去1，意味着对<strong>行取均值</strong>：[1.0, 2.0]</li></ul><p>在换一个 3*3 的矩阵：</p><pre><code>sess = tf.Session()x = tf.constant([[1., 2., 3.], [4.,     5., 6.], [7., 8., 9.]])print(sess.run(x))print(sess.run(tf.reduce_mean(x)))print(sess.run(tf.reduce_mean(x, 0)))print(sess.run(tf.reduce_mean(x, 1)))</code></pre><p>输出结果为：</p><pre><code>[[ 1.  2.  3.]  [ 4.  5.  6.]  [ 7.  8.  9.]]5.0[ 4.  5.  6.][ 2.  5.  8.]</code></pre><p>如果我再加<strong>一维</strong>会是怎么样计算？</p><pre><code>sess = tf.Session()x = tf.constant([[[1., 1.], [2.,     2.]], [[3., 3.], [4., 4.]]])print(sess.run(x))print(sess.run(tf.reduce_mean(x)))print(sess.run(tf.reduce_mean(x, 0)))print(sess.run(tf.reduce_mean(x, 1)))print(sess.run(tf.reduce_mean(x, 2)))</code></pre><p>我给输入的Tensor是三维数组：</p><pre><code>[[[ 1.  1.]  [ 2.  2.]][[ 3.  3.] [ 4.  4.]]]</code></pre><p>推测一下，前面的二维经过处理都变成了一维的，也就是经过了一次降维，那么现在的三维或许应该变成了二维。但是现在多了一维，应该从哪个方向做计算呢？<br>首先看输出结果：</p><pre><code>2.5        # x[[ 2.  2.]    # x,0  [ 3.  3.]]    [[ 1.5  1.5]    # x,1 [ 3.5  3.5]][[ 1.  2.]    # x,2 [ 3.  4.]]</code></pre><p>发现：</p><ul><li>当<code>axis</code>参数取默认值时，依然是计算整个数组的均值：(float)(1+2+3+4+1+2+3+4)/8=2.5</li><li><p>当<code>axis</code>取0，计算方式是：</p><pre><code>  [[(1+3)/2, (1+3)/2],  [(2+4)/2, (2+4)/2]]</code></pre></li><li><p>当<code>axis</code>取1，计算方式是：</p><pre><code>  [[(1+2)/2, (1+2)/2],  [(3+4)/2, (3+4)/2]]</code></pre></li><li><p>当<code>axis</code>取2，计算方式是：</p><pre><code>  [[(1+1)/2, (2+2)/2],  [(3+3)/2, (4+4)/2]]</code></pre></li></ul><p>总结：</p><blockquote><p>规律：</p><p>对于k维的，</p><ol><li><p>tf.reduce_mean(x,axis=k-1)的结果是对最里面的一维所有元素求和取平均</p></li><li><p>tf.reduce_mean(x,axis=k-2)的结果是对倒数第二层里的向量对应的元素进行求和取平均</p></li><li><p>tf.reduce_mean(x,axis=k-3)的结果是对倒数第三层的每个向量对应元素进行求和取平均</p></li></ol><p><a href="https://www.zhihu.com/question/51325408/answer/238082462" target="_blank" rel="external">参考链接</a></p></blockquote><p>附图理解：</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fromjszfxrj30ky09vt9n.jpg" alt=""></p><p>在TensorFlow 1.0版本中，<code>reduction_indices</code>被改为了<code>axis</code>，在所有的reduce_xxx系列操作中，都有axis也就是reduction_indices这个参数。</p><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tKfTcly1frp7z57mjuj30p00fr0ta.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TensorFlow 的名字已经说明了它最重要的两个概念—Tensor和Flow。Tensor就是张量，Flow翻译成中文就是“流”，它直观的表达了张量之间通过计算相互转化的过程。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://fengxru.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="TensorFlow" scheme="http://fengxru.cn/tags/TensorFlow/"/>
    
      <category term="深度学习" scheme="http://fengxru.cn/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>分式方程应用各个类型案例讲解</title>
    <link href="http://fengxru.cn/%E5%88%86%E5%BC%8F%E6%96%B9%E7%A8%8B%E5%BA%94%E7%94%A8%E9%A2%98%E5%88%86%E7%B1%BB%E8%AE%B2%E8%A7%A3/"/>
    <id>http://fengxru.cn/分式方程应用题分类讲解/</id>
    <published>2018-05-18T14:42:18.259Z</published>
    <updated>2018-05-19T02:59:31.663Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws3.sinaimg.cn/large/006tKfTcly1frggs2s4j5j30sg0iztbk.jpg" alt=""><br><a id="more"></a></p><h2 id="一、【行程中的应用性问题】"><a href="#一、【行程中的应用性问题】" class="headerlink" title="一、【行程中的应用性问题】"></a>一、【行程中的应用性问题】</h2><h3 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h3><blockquote><p>甲、乙两个车站相距96千米，快车和慢车同时从甲站开出，1小时后快车在慢车前12千米，快车比慢车早40分钟到达乙站，快车和慢车的速度各是多少？</p></blockquote><p>===</p><blockquote><p>分析：等量关系是什么？ —- 慢车用时 = 快车用时 + $\frac{40}{60}$</p></blockquote><div class="table-container"><table><thead><tr><th></th><th style="text-align:right">所行距离</th><th style="text-align:right">速度</th><th style="text-align:center">时间</th></tr></thead><tbody><tr><td>快车</td><td style="text-align:right">96 km</td><td style="text-align:right">x km/h</td><td style="text-align:center"></td></tr><tr><td>慢车</td><td style="text-align:right">96 km</td><td style="text-align:right">x-12 km/h</td></tr></tbody></table></div><p>解：设快车速度为 x km/h，则慢车的速度为 （x - 12）km/h</p><p>所以：</p><script type="math/tex; mode=display">\frac{96}{x-12} = \frac{96}{x} + \frac{40}{60}</script><p>解得：x = 48 km/h , x - 12 = 36 km/h</p><p>答：快车速度为 48 km/h , 慢车速度为 36 km/h。</p><h3 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h3><blockquote><p>甲、乙两地相距828km，一列普通快车与一列直达快车都由甲地开往乙地，直达快车的平均速度是普通快车平均速度的1.5倍．直达快车比普通快车晚出发2h，比普通快车早4h到达乙地，求两车的平均速度．</p></blockquote><p>==</p><p>解：设普通快车车的平均速度为 x km／h，则直达快车的平均速度为 1.5x km／h，依题意，得：</p><script type="math/tex; mode=display">\frac{828-6x}{x} = \frac{828}{1.5x}</script><p>解得：x = 46. 经检验，x = 46 是方程的根，且符合题意。</p><p>∴ x = 46，1.5x = 69</p><p>答：普通快车车的平均速度为46km／h，直达快车的平均速度为69km／h。</p><h3 id="例3"><a href="#例3" class="headerlink" title="例3"></a>例3</h3><blockquote><p>A、B两地相距87千米，甲骑自行车从A地出发向B地驶去，经过30分钟后，乙骑自行车由B地出发，用每小时比甲快4千米的速度向A地驶来，两人在距离B地45千米C处相遇，求甲乙的速度。</p></blockquote><p>分析：<br><img src="https://ws3.sinaimg.cn/large/006tKfTcly1frfwruhjr5j30im046dg9.jpg" alt=""></p><div class="table-container"><table><thead><tr><th></th><th style="text-align:right">所行距离</th><th style="text-align:right">速度</th><th style="text-align:center">时间</th></tr></thead><tbody><tr><td>甲</td><td style="text-align:right">87-45 km</td><td style="text-align:right">x km/h</td><td style="text-align:center"></td></tr><tr><td>乙</td><td style="text-align:right">45 km</td><td style="text-align:right">x+4 km/h</td></tr></tbody></table></div><p>等量关系：：甲用时间=乙用时间+ $\frac{30}{60}$   （小时）</p><p>解：设甲的速度为 x km/h ，则乙的速度为 (x+4) km/h</p><p>所以，</p><script type="math/tex; mode=display">\frac{87-45}{x} = \frac{45}{x+4} + \frac{30}{60}</script><p>解得：$x<em>{1} = -24$（不符合题意，舍去）$x</em>{2} = 14 km/h$，所以乙的速度为 18 km/h</p><p>答：…….</p><h3 id="例4"><a href="#例4" class="headerlink" title="例4"></a>例4</h3><blockquote><p>某客车从甲地到乙地走全长480Km的高速公路，从乙地到甲地走全长600Km的普通公路。又知在高速公路上行驶的平均速度比在普通公路上快45Km，由高速公路从甲地到乙地所需的时间是由普通公路从乙地到甲地所需时间的一半，求该客车由高速公路从甲地到乙地所需要的时间。</p></blockquote><h2 id="二、【工程类应用性问题】"><a href="#二、【工程类应用性问题】" class="headerlink" title="二、【工程类应用性问题】"></a>二、【工程类应用性问题】</h2><h3 id="例1-1"><a href="#例1-1" class="headerlink" title="例1"></a>例1</h3><blockquote><p>甲乙两个工程队合作一项工程，两队合作2天后，由乙队单独做1天就完成了全部工程。已知乙队单独做所需天数是甲队单独做所需天数的 $\frac{3}{2}$ 倍，问甲乙单独做各需多少天？</p></blockquote><p>解：设甲单独做需要 x 天，则乙单独做需要 $\frac{3x}{2}$天，则：</p><script type="math/tex; mode=display">\frac{2}{x} + \frac{3}{\frac{3x}{2}} = 1</script><p>解得：x = 4，则$\frac{3x}{2} = 6$</p><p>答：甲单独做需要4天，乙单独做需要6天。</p><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><p>这个等式的意思是什么？我们知道设 甲单独做需要 x 天，则按照题意，甲在这个项目中一共做了2天，则这两天完成了这个项目的百分之多少呢？ 不就是 $\frac{2}{x}$；则乙在这个项目中一共做了 3天，则这三天做了整个项目的百分之多少呢？ 不就是 $\frac{3}{\frac{3x}{2}}$。</p><p>所以加起来就是把这个项目完成了百分之百，即1. 所以等式为：</p><script type="math/tex; mode=display">\frac{2}{x} + \frac{3}{\frac{3x}{2}} = 1</script><h3 id="例2-1"><a href="#例2-1" class="headerlink" title="例2"></a>例2</h3><blockquote><p>甲、乙两个施工队共同完成某居民小区绿化改造工程，乙队先单独做2天后，再由两队合作10天就能完成全部工程．已知乙队单独完成此项工程所需天数是甲队单独完成此项工程所需天数的$\frac{4}{5}$，求甲、乙两个施工队单独完成此项工程各需多少天？</p></blockquote><p>解：设甲施工队单独完成此项工程需x天，则乙施工队单独完成此项工程需$\frac{4x}{5}$天，根据题意，得:　</p><script type="math/tex; mode=display">\frac{10}{x}＋\frac{12}{\frac{4x}{5}}＝1</script><p>解这个方程，得x＝25，经检验，x＝25是所列方程的根，所以 $\frac{4x}{5} = 20$</p><p>答：甲单独完成需要25天，乙单独完成需要20天。</p><h2 id="三、【营销类应用性问题】"><a href="#三、【营销类应用性问题】" class="headerlink" title="三、【营销类应用性问题】"></a>三、【营销类应用性问题】</h2><blockquote><p>营销类应用性问题，涉及 <strong>进货价、售货价、利润率、单价、混合价、赢利、亏损</strong> 等概念，要结合实际问题对它们表述的意义有所了解，同时，要掌握好基本公式，巧妙建立关系式．随着市场经济体制的建立，这类问题具有较强的时代气息，因而成为中考常考不衰的热点问题．</p></blockquote><h3 id="例1-2"><a href="#例1-2" class="headerlink" title="例1"></a>例1</h3><blockquote><p>某校办工厂将总价值为2000元的甲种原料与总价值为4800元的乙种原料混合后，其平均价比原甲种原料每千克少3元，比乙种原料每千克多1元，问混合后的单价每千克是多少元？</p></blockquote><p>解：设混合后的单价为每千克 x 元，则甲种原料的单价为每千克 (x+3) 元，混合后的总价值为 $(2000＋4800)$ 元，混合后的重量为 $\frac{2000+4800}{x}$ 斤，甲种原料的重量为 $\frac{2000}{x+3}$ ，乙种原料的重量为 $\frac{4800}{x-1}$，依题意，得：</p><script type="math/tex; mode=display">\frac{2000}{x+3} + \frac{4800}{x-1} = \frac{2000+4800}{x}</script><p>解得：x = 17，经检验，x = 17 是原方程的根，所以 x=17．即混合后单价每千克为17元。</p><p>答：……..</p><h3 id="例2-2"><a href="#例2-2" class="headerlink" title="例2"></a>例2</h3><blockquote><p>某商场销售某种商品，一月份销售了若干件，共获得利润30000元;二月份把这种商品的单价降低了 0.4元，但是销售量比一月份增加了5000件，从而获得利润比一月份多2000元，调价前每件商品的利润为多少元？</p></blockquote><p>== </p><blockquote><p>分析： 可以列出三个等量关系</p><p>1．2月份销售量一1月份销售量=5000</p><p>2．2月份销售量×2月份利润=2月份总利润</p><p>3．1月份利润一2月份利润=0.4</p></blockquote><p>解：由题意知，根据 二月所获利润 = 30000 + 2000 等式列方程，设调价前每件商品利润为 x 元，则调价后即2月份每件商品利润为 （x-0.4）元，得：</p><script type="math/tex; mode=display">(x-0.4)(\frac{30000}{x} + 5000) = 30000 + 2000</script><p>化简得：$5x^2 -4x -12 = 0$，所以$(x-2)(5x+6) = 0$</p><p>解得 x=2 或 x=-1.2（舍去）</p><p>答：调价前每件商品利润是2元。</p><h3 id="例三"><a href="#例三" class="headerlink" title="例三"></a>例三</h3><blockquote><p>某商厦进货员预测一种应季衬衫能畅销市场，就用8万元购进这种衬衫，面市后果然供不应求，商厦又用17.6万元购进了第二批这种衬衫，所购数量是第一批购进量的2倍，但单价贵了4元，商厦销售这种衬衫时每件定价都是58元，最后剩下的150件按八折销售，很快售完，在这两笔生意中，商厦共赢利多少元。</p></blockquote><p>解：由题意知，设商场第一次购进 x 件衬衫，则第二次购进 2x 件，</p><script type="math/tex; mode=display">\frac{80000}{x} = \frac{176000}{2x} -4</script><p>解得：x = 2000，经检验，x=2000是这个方程的根，∴ 2x=4000。</p><p>商场利润 = 两次总共所买获得总钱 - 两次进购所花总钱。</p><script type="math/tex; mode=display">(2000+4000-150)*58+58*0.8*150 - 80000 - 176000 = 90260 （元）</script><p>答：在这两笔生意中，商场总共盈利90260元。</p><h3 id="例4-1"><a href="#例4-1" class="headerlink" title="例4"></a>例4</h3><blockquote><p>一个批发兼零售的文具店规定：凡一次购买铅笔300枝以上，（不包括300枝），可以按批发价付款，购买300枝以下，（包括300枝）只能按零售价付款。小明来该店购买铅笔，如果给八年级学生每人购买1枝，那么只能按零售价付款，需用120元，如果多购买60枝，那么可以按批发价付款，同样需要120元，</p><p>（1）这个八年级的学生总数在什么范围内？</p><p>（2）若按批发价购买6枝与按零售价购买5枝的款相同，那么这个学校八年级学生有多少人？</p></blockquote><p>解：（1）由题意知，设八年级总人数为 x 人，每人购买一支，只能按零售价，所以 x≤300，如果多购买60支，则可按批发价，则 x + 60 &gt; 300</p><p>所以， 240 &lt; x ≤ 300</p><p>（2）根据按批发价购买6支与零售价购买5支的所需钱相同，列等式求解：</p><script type="math/tex; mode=display">\frac{120}{x}*5 = \frac{120}{x+60}*6</script><p>解得，x = 300，经检验，x=300是原方程的根。</p><p>答：这个学校八年级人数有300人。</p><h3 id="例5"><a href="#例5" class="headerlink" title="例5"></a>例5</h3><blockquote><p>某种商品价格，每千克上涨1/3，上回用了15元，而这次则是30元，已知这次比上回多买5千克，求这次的价格。</p></blockquote><h3 id="例6"><a href="#例6" class="headerlink" title="例6"></a>例6</h3><blockquote><p>小明和同学一起去书店买书，他们先用15元买了一种科普书，又用15元买了一种文学书，科普书的价格比文学书的价格高出一半，因此他们买的文学书比科普书多一本，这种科普和文学书的价格各是多少</p></blockquote><h2 id="四、【轮船顺逆水应用问题】"><a href="#四、【轮船顺逆水应用问题】" class="headerlink" title="四、【轮船顺逆水应用问题】"></a>四、【轮船顺逆水应用问题】</h2><h3 id="例1-3"><a href="#例1-3" class="headerlink" title="例1"></a>例1</h3><blockquote><p>轮船顺流、逆流各走48千米，共需5小时，如果水流速度是4千米/小时，求轮船在静水中的速度。</p></blockquote><p>===</p><blockquote><p>分析：顺流速度=轮船在静水中的速度+水流的速度</p><p>   逆流速度=轮船在静水中的速度-水流的速度</p></blockquote><p>解：设轮船在净水中的速度为 x km/h，得：</p><script type="math/tex; mode=display">\frac{48}{x+4}+\frac{48}{x-4} = 5</script><p>解得：x = 20 或 x=-0.8（舍去）</p><p>答：船在静水中速度为 20 km/h。</p><h3 id="例2-3"><a href="#例2-3" class="headerlink" title="例2"></a>例2</h3><blockquote><p>例2  轮船在顺水中航行30千米的时间与在逆水中航行20千米所用的时间相等，已知水流速度为2千米／时，求船在静水中的速度。（10）</p></blockquote><h3 id="例3-1"><a href="#例3-1" class="headerlink" title="例3"></a>例3</h3><blockquote><p>轮船顺水航行80千米所需要的时间和逆水航行60千米所用的时间相同。已知水流的速度是3千米/时，求轮船在静水中的速度。</p></blockquote><h3 id="例4-2"><a href="#例4-2" class="headerlink" title="例4"></a>例4</h3><blockquote><p>已知一个汽船在顺流中航行46千米和逆流中航行34千米共用去的时间正好等于它在静水中航行80千米用去的时间并且水流的速度是每小时2千米求汽船在静水中的速度。</p></blockquote><h3 id="例5-1"><a href="#例5-1" class="headerlink" title="例5"></a>例5</h3><blockquote><p>9、一艘轮船在静水中的最大航速为30千米/时，它沿江以最大航速顺流航行100千米所用的时间与以最大航速逆流航行60千米所用的时间相等，问：江水的流速为多少？设江水的流速为x千米/时，则可列方程?</p></blockquote><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1frgg8ndctmj30ry03kmxl.jpg" alt=""></p><h2 id="五、【其他应用性问题】"><a href="#五、【其他应用性问题】" class="headerlink" title="五、【其他应用性问题】"></a>五、【其他应用性问题】</h2><h3 id="例1-4"><a href="#例1-4" class="headerlink" title="例1"></a>例1</h3><blockquote><p>例1  要在15%的盐水40千克中加入多少盐才能使盐水的浓度变为20%．</p><p>分析：设加入盐千克．浓度问题的基本关系是：$\frac{溶质}{溶液}=浓度$</p></blockquote><p>解：设应加入盐 x 千克，依题意，得</p><script type="math/tex; mode=display">\frac{40*15\%+x}{40+x} = 20\%</script><p>解得：x=2.5，经检验，x=2.5是原方程的根</p><p>答：需要加入2.5kg的盐。</p><h3 id="例2-4"><a href="#例2-4" class="headerlink" title="例2"></a>例2</h3><blockquote><p>某校招生录取时，为了防止数据输入出错，2640名学生的成绩数据分别由两位程序操作员各向计算机输入一遍，然后让计算机比较两人的输入是否一致，已知甲的输入速度是乙的2倍，结果甲比乙少用2小时输完。问这两个操作员每分钟各能输入多少名学生的成绩？</p></blockquote><h3 id="例3-2"><a href="#例3-2" class="headerlink" title="例3"></a>例3</h3><blockquote><p>供电局的电力维修工要到30千米远的郊区进行电力抢修，技术工人骑摩托车先走，15分钟后，抢修车装载这所需材料出发，结果他们同时到达，，已知抢修的速度是摩托车的1.5倍。求这两种车的速度。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/006tKfTcly1frggs2s4j5j30sg0iztbk.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="家教" scheme="http://fengxru.cn/categories/%E5%AE%B6%E6%95%99/"/>
    
    
      <category term="曹晨" scheme="http://fengxru.cn/tags/%E6%9B%B9%E6%99%A8/"/>
    
      <category term="家教" scheme="http://fengxru.cn/tags/%E5%AE%B6%E6%95%99/"/>
    
      <category term="案例" scheme="http://fengxru.cn/tags/%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>基于网格的运动统计，用于快速、超鲁棒性的匹配</title>
    <link href="http://fengxru.cn/GMS-Grid-base%20Motion%20Statistics%20for%20Fast%EF%BC%8CUltra-robust%20Feature%20Correspondence/"/>
    <id>http://fengxru.cn/GMS-Grid-base Motion Statistics for Fast，Ultra-robust Feature Correspondence/</id>
    <published>2018-05-16T01:54:41.793Z</published>
    <updated>2018-05-18T05:27:07.873Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frd3ed5h5jj30dw07twf9.jpg" alt=""><br> <a id="more"></a></p><h2 id="前序"><a href="#前序" class="headerlink" title="前序"></a>前序</h2><p>今天分为两个部分讲解：</p><ol><li>关于Feature Matching 的介绍，可能有些人对feature matching本身不太了解。</li><li>最近几年关于关于feature matching的文章，主要有三篇。</li></ol><p>前两篇文章主要的工作是：把feature matching做的特别的robust，之前的一些作法可能能基本的实现基本的match，但是因为match的质量不高，导致很多应用是不能用的，比如三维重构。但是经过前两篇文章，就可以实现之前不能实现的了，提升了鲁棒性，具有了很大的提高。该篇文章主要是对前两篇文章的优化，因为前两篇虽然最终效果很好，但是速度很慢。对于三维重构来说速度勉强可以，但是对于机器人导航、SLAM、无人机这些应用来说，速度就不够了，作者就对这个问题进行了时间的优化，最终达到的效果就是：性能和前两篇文章实现的相近，时间提升了很多，很快。希望能把这个算法应用到更多实时应用上。</p><h2 id="Feature-Matching-Introduction"><a href="#Feature-Matching-Introduction" class="headerlink" title="Feature Matching Introduction"></a>Feature Matching Introduction</h2><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1frcwu3y7i5j30gi05w44b.jpg" alt=""></p><p>我们可以看一下这两张图，图中山峰是同一个山峰，但是是由人由两个角度进行拍照。所以我们如果能把两张图片中对应的点找来，找出来有什么用呢？我们知道上面的两幅图是由人从不同的角度拍照得来的，那么这两幅图中间是有一个几何关系，这个几何关系可以由一个方程来表示。那么每一个匹配点就相当于这个方程的解，如果我们有足够多的正确匹配的点，我们就可以用这些点来估算这个方程里面的参数，相当于我们知道了两张图片中对应的几何关系</p><h3 id="Correct-Correspondences的应用"><a href="#Correct-Correspondences的应用" class="headerlink" title="Correct Correspondences的应用"></a>Correct Correspondences的应用</h3><p>你把两张图片中相同的点匹配起来有什么用？</p><ul><li>Geometry between 2 views，Geometry就是两张图片中的几何关系，这样我们便可以用来做很多事情：比如：Estimate Camera Pose Localization(SFM)、Tracking(SLAM):就是你能把一帧一帧图像之间的相对应的几何关系能算出来，如果很准的话，你就能画出来人运动的轨迹，就是一个人导航问题。</li><li>Similarity（Number of matches），根据Feature matching的多少评测两张图片的相似度。然后我们就可以用来做Image Retrieval(图像检索)、Object Recognition(目标识别)、Loop Closing(SLAM)….</li></ul><h3 id="如何实现Feature-Matching"><a href="#如何实现Feature-Matching" class="headerlink" title="如何实现Feature Matching"></a>如何实现Feature Matching</h3><p>就是在两张Image中相同的这些部分找到，再把它们匹配起来。</p><ol><li>首先是如何找到，包含两个步骤：Detection、Description。<ul><li>Detection：首先找到的是角点，再者比较容易找的是边缘的点。</li><li>Description：对于这些每一个点计算出周围的特征，比如sift是用128维的数字去描述他的一个description。</li><li>matching的时候，只要用这个128维的数字计算跟哪个点的距离最小，就是最相似的</li><li>Geometry：你拿到这些点的匹配后，去做一个他们之间的相关的几何匹配，模拟几何关系，符合这个几何关系的就是正确匹配的点，不符合的就是错误的点。有了几何关系就可以坐后面的事情了。</li></ul></li></ol><p>LIFT：是用深度学习做的，他认为用深度学习得到的feature比手动提取的feature 更加有用</p><p>Matching Algorithms：CODE、RepMatch、GMS。因为Brute-Force和Approximate（FLANN）所获取的匹配点是杂乱的，大量的，这样你最后算几何关系就会很慢，效果还不好。我们这些Matching Algorithms算法是用来从Nearest-Nerighbor match中找出正确的匹配点，错的剔除去。</p><h3 id="如何估计两张图片之间的几何关系"><a href="#如何估计两张图片之间的几何关系" class="headerlink" title="如何估计两张图片之间的几何关系"></a>如何估计两张图片之间的几何关系</h3><p>一般用的是RANSAC-based方法。</p><p>RANSAC：Random Sample Consensus，它是根据一组包含异常数据的样本数据集，计算出数据的数据模型参数，得到有效样本数据的算法。</p><p>RANSAC也做了一下假设：给定一组（通常很小的）局内点（符合最优模型的点为局内点，不符合的定义为据外点），存在一个可以估计模型参数的过程而该模型能够解释或者适用于局内点 </p><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frcxgtq6ehj30vk0guju0.jpg" alt=""></p><p>一个简单的例子就是从一组观测数据中找到合适的2维直线。假设检测到的数据如上图左图。简单的最小二乘法不能找出适应与局内点的直线，原因是最小二乘法尽量去适应包括局外点在内的所有的点。相反，RANSAC能够得出一个仅仅用局内点计算出模型，并且概率还足够高。但是RANSAC并不能保证结果一定正确，为了保证算法有足够搞得合理概率，我们必须小心的选择算法的参数。</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxhlslf4j30jq0dy3zu.jpg" alt=""></p><p>在我们的Feature matching里面，它的RANSAC就不是一条直线了，而是两张图片中的几何关系。这里有两个普遍的几何关系：</p><ul><li>Fundamental Matrix（for 3D scenes）：Point to Line(weak, general)<br>只能是点对线的匹配，就是给定第一张图片中的一个点，它会在第二张图片中画出这个点所在的线。<em>能把一个点和一条线对应起来，这就是它们之间的几何关系，这个几何关系能够恢复出来相机的旋转和平移，用的方法主要是RANSAC方法</em></li><li>Homography (for 2D scenes)：Point to Point（strong，narrow range）<br>只对2D场景有效，比如你拍一张墙的照片，然后对其中一个点，就能匹配到第二张图片的点。</li></ul><h2 id="Recent-Robust-Matchers"><a href="#Recent-Robust-Matchers" class="headerlink" title="Recent Robust Matchers"></a>Recent Robust Matchers</h2><h3 id="CODE-1"><a href="#CODE-1" class="headerlink" title="CODE [1]"></a>CODE [1]</h3><blockquote><p>该算法解决的是 wide-baseline matching问题。</p></blockquote><h4 id="wide-baseline-matching-？"><a href="#wide-baseline-matching-？" class="headerlink" title="wide-baseline matching ？"></a>wide-baseline matching ？</h4><p>基线的本意是指立体视觉系统中量摄像机光心之间的距离。一句拍摄两幅图，像的视点位置可将对应点匹配问题分为宽基线和窄基线。宽基线一词用于匹配时，泛指两幅图像有明显不同的情况下匹配。产生这种情况的原因有可能为摄像机之间的位置相差很大，也有可能由于摄像机旋转或焦距的变化等因素产生。</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1frcxjfh009j30oa0lw1kx.jpg" alt=""></p><p>每一幅图片中的其实是两幅图片，图片中的墙是相同的一个墙，只是由于拍摄的角度特别的大，传统的一些算法处理的不是很好，但是code算法可以，匹配的比较多，准确率也比较高</p><h4 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h4><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxjrpjtxj30s00lok26.jpg" alt=""></p><p>整体思想如上图，包含了三个回归模型，likelihood是第一个模型，affine motion 为第二第三个模型。这些回归模型就相当于分类器。</p><ol><li>首先输入的是 Selected matches ，就是先挑一些比较好的match，把它们记录下来，去fit第一个模型，其实就相当于是一个分类器，然后用这个分类器把所有match做一个过滤，符合这个的留下来，不符合的剔除。</li><li>然后再用后面两个模型（即分类器）去过滤，最后都通过的才算最终正确的匹配点。</li></ol><p>这三个回归是怎么做的？看下图（回归模型）</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frcxkf79soj30ms07iwj2.jpg" alt=""></p><p>有一堆散的点，用这些数据去fit一个平面，这个平面上的你认为是对的，不在这个平面上，你认为是错误的。这样的regression总共有三步。</p><h5 id="Likelihood"><a href="#Likelihood" class="headerlink" title="Likelihood"></a>Likelihood</h5><ul><li>train data：是我们选出来的那些好的match</li><li>test data：是所有的的match</li><li>features of a correspondence：把每一个match点定义为8位的向量，x,y是它的空间位置，dx，dy描述了它的motion，就是一对match点，左右各有一个点，用第二个点（第二幅图）的x2 减去 第一个点x1得到dx。T1-T4是一个矩阵的变换。我们看到的是点对点的匹配，其实是区域的匹配，这四个参数就是描述了左边的这个小区域到右边的对应的小区域的变换。</li><li>Label：我们开始初始化为都是1，认为都是对的。</li><li>Non-linear Optimization：描述了所有correspondence之间的相似性，相似性大的就是1，小的就是0</li></ul><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxkwi8wxj30pg07iwg0.jpg" alt=""></p><p>likelihood模型为什么有用，它就是用来区分连续的Motion和不连续的Motion，作者认为不连续的Motion一般就是错的。第一个模型就是找那些correspondened是连续的。第二个模型就是把它的精度提升了一下，把x和y都预测了一下。作者认为 (a) (b) 这样的图像中的点是正确的点，而像 (c) 这两个比较近的点的方向还差这么大，就认为是错的。第一个模型likelihood就是找到连续的motion，那些点的motion是连续的。<br>第二个模型就是提升了它的精度，把x和y都测了一下。</p><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>code算法的input就是那个Nearest Neighbor match，它里面是乱七八糟，所有的match都有，而code就是把其中的对的找出来。</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxlbkbtij30yo0kye81.jpg" alt=""></p><h4 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h4><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxmak1twj30yg0g0h0y.jpg" alt=""></p><p>主要是三维重构，你上面第二幅图是用商业软件做的，并不是很好，第三幅是用SFM做的，第四幅还是用SFM做的，但是它把SFM中的Feature matching替换成CODE算法得出的feature matching，效果就好很多。</p><h4 id="Run-time-comparison"><a href="#Run-time-comparison" class="headerlink" title="Run time comparison"></a>Run time comparison</h4><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frcxmocctwj30uo0fo41r.jpg" alt=""></p><p>纵轴是时间表示，以 s 为单位，横轴是matches的数量，可以看到code运行的时间要比其他的好很多，但是对于slam ，机器人导航，一秒钟要读取几十帧，code这个算法的时间还是不够的。</p><h3 id="RepMatch-2"><a href="#RepMatch-2" class="headerlink" title="RepMatch [2]"></a>RepMatch [2]</h3><blockquote><p>基于第一个算法之上，解决一个重复结构（repeated structure）的问题。它是用第一个算法的输出，然后在这个输出上再做一次优化，筛选一些对的点。</p></blockquote><h4 id="repeated-structure到底是一个什么问题"><a href="#repeated-structure到底是一个什么问题" class="headerlink" title="repeated structure到底是一个什么问题"></a>repeated structure到底是一个什么问题</h4><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frcxni5kc2j310a0a8133.jpg" alt=""></p><p>比如 (a) 图中，我们拍了一栋楼的正面，侧面，反面等照片，然后进行SFM三维重构，发现结果它是给我化成了四个部分，但其实它是一栋楼，就是说三维重构并没有重构出这栋楼。<br>原因：因为（a）图像中的楼的各个面的窗口都很像，你也不能确定正面的窗口和背面的窗口有什么不一样，所以导致一个问题：比如SFM就给你标出四个独立的模型，这明明是一栋楼，它合不起来。主要是因为他们之间错误的匹配太多了，你把楼的前面跟后面匹配在一起，它脑子就乱了，根本不知道这是个什么模型。</p><p> 然后用了RepMatch，就能构造一个完整的模型，周围的每一个点是每一张相片拍照的位置，中间这一圈就是楼的俯视图，你他最后dense  reconstruction的结果就是最右边的图</p><h4 id="Repetitive-Structure（怎么做到的构建成功的）"><a href="#Repetitive-Structure（怎么做到的构建成功的）" class="headerlink" title="Repetitive Structure（怎么做到的构建成功的）"></a>Repetitive Structure（怎么做到的构建成功的）</h4><p>idea:是做分类<br>它是建立在CODE 输出结果之上的。它把输出结果分为了几类：</p><ul><li>第一类：把结果放的严一些，然后结果数就很少。</li></ul><h3 id="GMS"><a href="#GMS" class="headerlink" title="GMS"></a>GMS</h3><p>这篇文章主要是把前面两篇文章的主要思想掌握到，然后把它变快，能够把它应用到更多上面。</p><p>首先我们看一个小视频，上面的是作者的GMS算法，下面的是sift，我们可以发现，GMS的match首先在数量上就比sift的多很多，这样我们就能保证最后验证那个几何关系比较准，如果点比较少的话，你做RANSAC的话，就会不稳定，出错之类的。作者的算法比sift这个算法更快更好。</p><h4 id="Motivation：为什么又要质量好又要速度快"><a href="#Motivation：为什么又要质量好又要速度快" class="headerlink" title="Motivation：为什么又要质量好又要速度快"></a>Motivation：为什么又要质量好又要速度快</h4><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frcxo7udm1j312w0l60xv.jpg" alt=""></p><p>最常用的算法可能就是Ratio Test，比较流行，比较快，但是不具备鲁棒性。当前的算法比如code等，效果很好，但是很慢。GMS特点就是：又快又好。</p><p>论文GMS的方法实际上是消除错误匹配的一种方案，比如可以替换ransac。算法执行的大致流程是：先执行任意一种特征点的检测和特征点的描述子计算，论文中采用的是ORB特征。然后执行暴力匹配BF，最后执行GMS以消除错误匹配。</p><h4 id="Key-Idea"><a href="#Key-Idea" class="headerlink" title="Key Idea"></a>Key Idea</h4><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frcxp52no1j310s0dy1kx.jpg" alt="">True matches(green) are visually smooth while false matches(cyan) are not.  </p><p>正确匹配的点我们用绿色的标注出来，错误匹配的点用青涩标注出来。首先我们可以看到正确匹配的点，举个例子，假设随便拿出来两个正确匹配的点（绿色标注的）记为1号点和2号点，1、2号点在另一幅图中对应匹配的点为1‘和2’。我们可以看到1号点对应的匹配点1‘与2号点对应的匹配点2’位置差不多，相似，整个过程是一个比较smooth的过程。而两个相近错误的点（青色的标注），对应的匹配点一个去了楼上，一个去了天上，这就是我们从观察上得到的信息。<em>那么如何把这个观察的信息变成一个算法去验证这个点是对还是不对，这就是算法的核心</em>。</p><p>首先我们说了一个正确的match看起来比较smooth，所以我们有没有办法把这些看起来比较smooth的match提取出来，我们就认为这些match是对的。<br>根据贝叶斯上讲，既然正确的match看起来比较smooth，那么比较smooth的match应该也是正确的。</p><p>Key Idea：核心思想就是我们如何把match中比较smooth的match拿出来。</p><p><em>方法</em>主要分为三部分：</p><ol><li>Motion Statistics：motion统计</li><li>Grid Framework：grid结构是用来加速的</li><li>Motion Kernels：也是用来加速的</li></ol><p>后面两个部分都是为了实现第一个部分Motion统计，让它变得很快。</p><h4 id="Motion-Statistics"><a href="#Motion-Statistics" class="headerlink" title="Motion Statistics"></a>Motion Statistics</h4><h5 id="Motion-Statistics-Model"><a href="#Motion-Statistics-Model" class="headerlink" title="Motion Statistics Model"></a>Motion Statistics Model</h5><p>首先看一下统计模型是怎么样的，对每一个match，比如说match xi，给他左边和右边各画一个圈，数一下圈中还有多少个其他的match</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frcxq8nm9sj30y20hytw9.jpg" alt=""></p><p>这个有什么道理：如果一个正确的match，它旁边还有正确的match的话，应该是支持它的。（就像之前的图中显示那样，对的，周围一般Motion是相似的）道理就是一个正确的match旁边可能有对的点在帮你，而对于一个错误的match，你的这个错误是随机发生的，你很难再找到一个点跟你犯一样的错误。所以这两个的概率相差非常大的，第一种正确的match这个圈里面总会有一些点来支持它，而错误的match 支持它的点可能有，但是会很少，这就是这个算法的模型。</p><p>这个图中Si就是表示统计值，这张图中Si = 2，Sj是下面那个，没有人支持他，所以是0.<br>所以motion统计就是这样一件事情。</p><p>Si = 2；Sj = 0.</p><h4 id="我们分析一下这个模型为什么对于判断“这个点是否正确”有效"><a href="#我们分析一下这个模型为什么对于判断“这个点是否正确”有效" class="headerlink" title="我们分析一下这个模型为什么对于判断“这个点是否正确”有效"></a>我们分析一下这个模型为什么对于判断“这个点是否正确”有效</h4><p>我们假设一个点的统计值 Si ，</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxqz5w9dj30kw04o3zj.jpg" alt=""><br>它应该服从这个binomial distribution（二项分布）。<br>就假设这个 xi 是正确的的话，那么用 pt 表示这个概率，这个概率是指：假设上图中左边的圈为A，右边的圈为B，那么如果这个点 xi 匹配是正确的话，它周围的点从A到B的可能性是多少，就是支持这个点 xi 的可能性是多少。<br>对于这个 pf ，如果这个 xi 匹配是错的，那么它周围的点支持它的概率是多少。</p><p>我们用 fa 表示 A 这个圈中额外支持它的n个点中的一个点。然后去算这个概率，我们要给出一个事件和假设，如下图：</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1frcxrds8qpj30ws09e40k.jpg" alt=""></p><ul><li>第一个事件表示：fa这个点匹配正确，它的概率为 t，这个概率跟这个算法有关，匹配的质量越高，那么这个概率当然要高</li><li>第二个事件表示：fa 这个点匹配错误，它的概率就是 1-t</li><li>第三个事件表示：fa 这个点 匹配到了 B 圈中的一个点（但不一定是正确的）</li></ul><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxroffjfj31040aqac3.jpg" alt=""></p><p>定义这三个事件后，我们给出一个假设：如果一个点它匹配错了，它的匹配还是从A到B的话，那么它的概率是多少 。我们知道如果是A中的一个点匹配错了，那有可能匹配到右边Image中的任何一个点，而它恰好匹配到B圈中的点，如果是随机分布的话，那么这个概率应该为 (m / M), m为B圈中的点的个数，M 为右边图中所有的点的个数。但是可能很多Image是这样的分布，但是有一些Image不是，我们为了弥补这个假设（随机分布），我们给它乘以一个 “贝塔”参数，当这个参数比较大的时候，这个假设就不那么成立了 。这个参数为1的时候，这个假设正好成立。 </p><p>我们算一下这个概率，如下图：<br><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frcxs4c06oj30tw0i0n1z.jpg" alt=""></p><p>因为m很小，所以 pf 是一个接近 0 的概率。<br>而 pt 是一个接近 t 的数，因为 pf 是接近 0 的数 。所以这两个的差异很大，另外我们要怎么才能让这个差异变得更大？</p><p>我们上面是在两张图中各画了一个小圈AB，这个小的区域中，他们的正确的点motion是连续的，通常一个Image中，不是只有这个一个小的区域中的motion是连续的，更大的区域应该也是连续的。</p><p>比如，之前那张狗的图片，我们只是画了狗的鼻子的一小块区域，但是其实鼻子旁边的区域也是连续的，当然我们不是画整张图片，只是比那个小圈更大一些，所以扩展到了 3*3的这样一个区域，相当于比之前的一个圈扩大了9倍，如下图：</p><p> <img src="https://ws4.sinaimg.cn/large/006tNc79ly1frcxsgt12oj30tk0h0wge.jpg" alt=""></p><p>我们之前只是画了a、b这两个圈，现在我们画了9个这样圈，并且统计这个 3 * 3 这样的区域中的 Si。这样便能增大这个distribution之间的差异，如下图：</p><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frcxtro02rj30lm048jsp.jpg" alt=""></p><p>因为是3*3，所以 K=9 ，这个Si的分布中 pt 和 pf 是跟之前的一样的，因为只有K变化了。所以计算一下均值和方差，如下图：</p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frcxu00evbj30s803s76e.jpg" alt=""></p><p>这个是后面要用到。</p><p>现在我们分析一下这个模型有什么用</p><h4 id="Analysis-Model"><a href="#Analysis-Model" class="headerlink" title="Analysis Model"></a>Analysis Model</h4><ul><li><p>Partionalbility</p><p>这个词是表示，对的点和错的点之间有多大的差距，看起来在这个模型中有多么不一样。<br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxuymvwzj30oe038q3s.jpg" alt=""><br>P就是用来定义这两个分布（错的和正确的分布）的距离。P越大，表示这个错误的点和正确的点看起来越不一样，那么这个模型就越强。 </p></li><li><p>Quantity-Quality equivalence</p></li></ul><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1frcxv626d2j30kc02ydfw.jpg" alt=""><br>我们可以看到这个 P 是正比于这个 Kn 的，就是说你用越多的点在里面，那么这个模型就越强，错的点和对的点的区别就越大。</p><ul><li>Relationship to Descriptors</li></ul><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frcxvbftmvj30n402k74p.jpg" alt=""><br>看与这个descriptors的关系，这个descriptors就是 t ，比如你用sift特征点，假如这个sift特征特别强的话，那么这个P是趋近于无穷大的。这就能验证我们的算法是对的。，也比较合乎道理，你特征越强，你越好分割，所以 P 趋近于无穷大。</p><h4 id="Experiments-on-real-data"><a href="#Experiments-on-real-data" class="headerlink" title="Experiments on real data"></a>Experiments on real data</h4><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxwj273hj30g20dy3zs.jpg" alt=""><br><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frcxx02a4xj30ws046aba.jpg" alt=""><br>该模型在Oxford Affine Dataset上进行评估。 在这里，我们运行SIFT匹配并根据基础事实将所有匹配标记为内点或外点。 我们计算每个匹配的一个小区域内的支持的个数。</p><p>纵轴表示了每个matching旁边画了两个小圈，然后数一数这个小圈中 正确的Inlier周围中到底有多少个点支持它，错的点到底有几个点支持它。</p><p>它有8的小的datasets，每个dataset里面有五对张照片，这五对照片匹配起来<br>一对比一对难，就是越来越难，每个数据，是用8个datasets的数据做了平均得到的。</p><p>所以从上图可以看出：对于正确的点，就算是最难得时候，也有接近8个点支持它，而对于错误的点，始终没有超过1个点支持它。所以可以看出这个模型对于正确的点和错误的点的认识性还是很强的。</p><p>这个算法我们已经知道了，那么如何去加速实现它呢？</p><h4 id="Grid-Framework"><a href="#Grid-Framework" class="headerlink" title="Grid Framework"></a>Grid Framework</h4><p>我们刚才是给每对匹配点画两个圈，一个点一个圈，这样的问题就是：你要想知道有多少个点这个圈内，那你必须要把所有的点过滤一遍。</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxxlai2dj31260hmq6m.jpg" alt=""><br>所以现在我们的做法是不要给这个匹配点画圈，我们直接把image 打成网格，然后这个匹配点自然就会落在这个Image的网格中，那么它这个网格就代表他的这个小圈，就没有了两个小圈的匹配，而变成了两个网格的匹配，你只要数一下这个网格中有多少个点跟它一样就可以了。 只要你一开始把这些 Feature matching丢进这些网格中，你很容易数清楚。这样算法的时间复杂度就从O(n) -&gt; O(1). 所以会变得很快。</p><h4 id="Motion-Kernel"><a href="#Motion-Kernel" class="headerlink" title="Motion Kernel"></a>Motion Kernel</h4><p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1frcxxraymdj30y60l440x.jpg" alt=""><br>因为我们之前已经知道用更多的region会产生更好的结果，因为我们进行统计的时候就变成了统计这九个小网格的正确点的数量就好了，就很容易能数清楚。</p><h4 id="Empirical-parameters（经验参数）"><a href="#Empirical-parameters（经验参数）" class="headerlink" title="Empirical parameters（经验参数）"></a>Empirical parameters（经验参数）</h4><ul><li><p>你用多少个网格？</p><ul><li>太细的话，统计不好</li><li>太粗的话，精度太低</li><li>经验上作者是说用 20 * 20</li></ul></li><li><p>How to set the threshold？怎么设置阈值？<br>就是认为计算出来的这个值（用 τ 表示）过了多少是对的，没过多少是错的。用的是一个平均值加一个方差，这是经验得到的，并没有什么道理可言。<br><img src="https://ws3.sinaimg.cn/large/006tNc79ly1frcxy19p42j30ry08sgnk.jpg" alt=""><br>这个 α 参数一般我们设置为 0.6 。</p></li></ul><h4 id="Grid-Motion-Statistics-Algorithm"><a href="#Grid-Motion-Statistics-Algorithm" class="headerlink" title="Grid Motion Statistics Algorithm"></a>Grid Motion Statistics Algorithm</h4><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxy972w1j30pm0ms0zx.jpg" alt=""><br>首先是给定这个 Correspondences（匹配点）、scale、rotation，然后产生这个 Kernel 和 Grid（20 * 20）。确定好了，去计算每一个点的统计值 Si ，然后去计算这个 τ，如果这个 Si &gt; τ，那么这个点就是对的。没过就是错的。</p><h4 id="Full-feature-matching-pipeline"><a href="#Full-feature-matching-pipeline" class="headerlink" title="Full feature matching pipeline"></a>Full feature matching pipeline</h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frcxyged1wj30qy0lkwll.jpg" alt=""><br>这是一个完整的流程，首先获取 feature 然后做 match，然后交给GMS，因为这个scale、rotation可能有多个值，你可以多试几遍，找到一个最好的值。 </p><h4 id="Run-time"><a href="#Run-time" class="headerlink" title="Run time"></a>Run time</h4><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxym1mzzj310y0g2n0h.jpg" alt=""><br>这里是提取10000个点为例。<br>这个值可以再Video上实时的，因为ORB和Nearest neighbor可以并行</p><h4 id="Evaluation"><a href="#Evaluation" class="headerlink" title="Evaluation"></a>Evaluation</h4><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frcxzfbmt4j311e0ncaro.jpg" alt=""></p><p>我们测试了4个dataset，第一个是TUM。做slam的可能知道，下面是6个视频，然后从中提取出很多帧做测试，所以这个数据集上有3000多个照片。</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1frcxzgleftj30uw0nm7b4.jpg" alt=""><br>0-30是表示两张图片的角度，就是baseline。至于在Strecha和VGG上，Ratio算法表现并不差，是因为这两个数据集太水了，大家是用来发paper的。像TUM这样真正的应用数据上来看，一般的算法根本就不太行了，质量会很差。 </p><p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1frcxzial0xj30xk0ow79k.jpg" alt=""><br>X轴是时间，用的是ms表示，Y轴是performance，红色的是作者的算法表现。可以看出GMS实现了结果上差不多，但是时间上快很多倍的效果。</p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxzjw5f1j311u0p07wh.jpg" alt=""><br>我们从上图可以看出，第一幅图，是在平面上，GMS和SIFT比来看，SIFT经过RANSAC后，结果还是勉强可以的。就是说在平面上，这个sift加上RANSAC结果还是可以的。但是在3D中，sift匹配的全都是错误的点，但是GMS依然是表现很好。说明我们这个算法对于wide-baseline问题是真的解决了，不像sift只有在实验中（那些dataset上）表现的还可以接受，但是在现实中的dataset就不行了。</p><p>再就是解决了重复结构的问题，如下图：<br><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxzm03dkj311y0jo4qp.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1frcxzo7hcrj30yy0oghdt.jpg" alt=""><br>之前我们是假设物体是静止的，但是这些猫狗是会动的，动了之后，你拍的图片用sift去匹配的话，如果有的匹配错，并且没有那些RANSAC方法去帮它修正的，那么你匹配对的就是对的，错的就是错的，没有办法去修改。而作者的算法是可以匹配正确的，根本不需要去修正。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1frd3ed5h5jj30dw07twf9.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="论文" scheme="http://fengxru.cn/categories/%E8%AE%BA%E6%96%87/"/>
    
    
      <category term="GMS" scheme="http://fengxru.cn/tags/GMS/"/>
    
      <category term="CVPR 2017" scheme="http://fengxru.cn/tags/CVPR-2017/"/>
    
  </entry>
  
  <entry>
    <title>Mac常用快捷键教程</title>
    <link href="http://fengxru.cn/Mac%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%95%99%E7%A8%8B/"/>
    <id>http://fengxru.cn/Mac常用快捷键教程/</id>
    <published>2018-05-08T15:38:49.000Z</published>
    <updated>2018-05-09T05:08:47.192Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fr4czzw6xfj312s0ny4f3.jpg" alt=""></p><a id="more"></a><h2 id="用option快速输入一些特殊符号"><a href="#用option快速输入一些特殊符号" class="headerlink" title="用option快速输入一些特殊符号"></a>用option快速输入一些特殊符号</h2><ul><li>option V： 输入  √</li><li>option /： 输入  ÷</li><li>option =： 输入  ≠</li><li>option &gt;： 输入  ≥</li><li>option &lt;： 输入  ≤</li><li>option K： 输入  ˚</li><li>option X： 输入  ≈</li><li>option =： 输入  ≠</li><li>option 2： 输入 ™</li><li>option R： 输入  ®</li><li>option Y： 输入  ¥</li><li>option P： 输入  π</li><li>option G： 输入  ©</li><li>option + shift + K： </li></ul><h4 id="通知中心开关"><a href="#通知中心开关" class="headerlink" title="通知中心开关"></a>通知中心开关</h4><blockquote><p>按住 option 点击桌面右上角通知中心，即可直接关闭或开启通知。不用在通知中心中打开了。</p></blockquote><p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fr4dwwsrc0g30gu08mq3t.gif" alt=""></p><blockquote><p>比如用 Mac 全屏看电影又不想被右上角的消息弹出打扰的话，暂时开启勿扰（关闭通知）就是了.</p></blockquote><h4 id="WIFI状态"><a href="#WIFI状态" class="headerlink" title="WIFI状态"></a>WIFI状态</h4><p>按住 option 点击 Wi-Fi 图标即可查看 IP 地址、Wi-Fi 信号强度等等 Wi-Fi 的详细信息。<br><img src="https://ws3.sinaimg.cn/large/006tNc79ly1fr4dwnmbmuj30hg0nw406.jpg" alt=""></p><h2 id="通用快捷键"><a href="#通用快捷键" class="headerlink" title="通用快捷键"></a>通用快捷键</h2><ul><li>command + M：最小化窗口</li><li>command + H：隐藏窗口</li><li>command + N：新建窗口</li><li>command + O：打开</li><li>command + Shift + S：另存为</li><li>command + P：打印</li><li>command + W：关闭</li><li>command + Q：退出</li></ul><h2 id="文件管理器"><a href="#文件管理器" class="headerlink" title="文件管理器"></a>文件管理器</h2><ul><li>command + I：显示简介</li><li>command + F：搜索</li><li>command + delete：删除</li><li>command + Shift + delete：清空回收站</li><li>option + 方向键左：将光标移动到前一个单词</li><li>command + option + I：查看多个文件一共有多大</li><li>option + 方向键上：将光标移动到当前段落的开头</li><li>command + shift + 方向键左/右：可以选中一句话</li><li>command + 方向键左：将光标移动到句子的开头</li><li>command + 方向键上：将光标快速移动到整篇文本开头</li></ul><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ul><li>command + +\=：放大</li><li>command + --：缩小</li><li>command + T：新建一个选项卡</li><li>command + N：新建一个新窗口</li><li>command + R：刷新</li><li>command + F：搜索</li><li>command + W：关闭当前选项卡</li><li>command + D：将网页加入个人收藏</li><li>command + Z：恢复刚才关闭的网页</li><li>command + shift + B：显示或隐藏收藏栏</li><li>command + shift + N：打开一个全新的隐私浏览器窗口比较合适</li><li>space / space + shift：向下或向上滚动一整页</li><li>command + option + Q：退出 Safari，在下次打开的时候，会自动加载上次的所有窗口</li><li>option + 方向键上/方向键下：网页向上或向下滚动一整页</li></ul><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><ul><li>command + option + esc：强制退出程序</li><li>command + shift + Y：生成便签</li><li>command + space：切换输入法</li><li>command：按住command即可用鼠标移动拖动顶部图标排列</li><li>control + command + space：快速调出emoji表情和各种特殊符号输入</li><li>shift + option + F1 / F2：可以以1/4格为单位对屏幕亮度调整，音量也是如此。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>后续会继续补充。有什么遗漏的，可以留言。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fr4czzw6xfj312s0ny4f3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://fengxru.cn/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://fengxru.cn/tags/Mac/"/>
    
      <category term="快捷键" scheme="http://fengxru.cn/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>吵架</title>
    <link href="http://fengxru.cn/2018.4.27/"/>
    <id>http://fengxru.cn/2018.4.27/</id>
    <published>2018-04-27T16:42:05.682Z</published>
    <updated>2018-05-09T04:16:12.275Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws4.sinaimg.cn/large/006tNc79ly1fqrpbkpmtwj31kw0zk49k.jpg" alt=""></p><blockquote><p>今天是怎么了，或者说这几天是怎么了，天天惹你生气，心情很烦躁，我准备开始写日记，抒发一下自己的心情，要不我可能会被憋死的。</p></blockquote><a id="more"></a><h3 id="前序"><a href="#前序" class="headerlink" title="前序"></a>前序</h3><p>环顾四周和手机应用，竟然没有一个地方可以让我肆无忌惮的畅所欲言的发泄。在朋友圈、空间、微博你敢发吗，人长大了，总是要顾虑这顾虑那，我不想发在朋友圈后，让你再多想，我只是想找一个地方写写我的心情，要不我可能真的会被郁闷死的。</p><h3 id="回忆中学"><a href="#回忆中学" class="headerlink" title="回忆中学"></a>回忆中学</h3><p>初中时候，我个人的品性很差，现在想想那可能是最灰暗的三年了，没有知心朋友，脾气古怪，小心眼，自己一个人卑微的活着，也不知道打了多少架，现在想想，心中只是一阵痛。我只能说，有时候真的不是我的错，我还记得初中上学时，学校不让住校，我就只能在学校外跟同学合租房子，大约有5、6个人吧。其中有一个是邻班的班长，有天晚上，他就突然找我的茬。有人可能说，人家怎么会莫名其妙的找你的茬，但我可以摸着良心说，我真的没有做错什么。那天晚上，他跟我打了一架，我被揍了，哭着跑了出去，大晚上自己一个人走在马路上，一个人哭，最终我还是去给我妈妈打了个电话，最终的结果就是，我妈妈来了学校，他妈妈也来了学校，和解。后来我才知道，他为什么要跟我打架，因为他想让他一个好朋友住进来，把我踢出去，现在想起来我还是很痛恨他。</p><h3 id="事情原委"><a href="#事情原委" class="headerlink" title="事情原委"></a>事情原委</h3><p>话扯远了，今天晚上也不知道为啥心情这么暴躁，刚开始和你打游戏时的心态可能就不对，最后因为我想用法师貂蝉，而队伍中已经有个法师，你就说别让我用法师，换个吧。我当时可能心情就很不爽了，因为之前打了几局都不好，然后就反驳，最后凶了你一句，然后我们就各删了游戏。呵呵，然后就在微信上聊了起来，你说你哭了，觉得自己很委屈，只不过是玩个游戏，我就凶你了，那以后生活的不得水深火热。我当时心中还很烦躁，我这个人要是心情烦躁起来，就不会讲理了。</p><p>聊着聊着，我就问了你一句：“现在后悔还来得及”，其实说完这句话，我很还忐忑，我心中在期待，你肯定的回答，但是没有。但也不意外，毕竟都在气头上，而且还是我的错。</p><p>我很害怕失去你，又不想表达出来，想听你心中最真实的想法，我自己心中的想法是“你要是想离开，我不会挽留”，因为你既然都想好了，我不想要个勉强的你。</p><h3 id="自我反省"><a href="#自我反省" class="headerlink" title="自我反省"></a>自我反省</h3><p>话说回来，也该批评自己了，最近是很膨胀啊。毕竟这几年过得都顺风顺水，没什么大的坎坷，可能自己在心态上就有了变化，脾气也见长了，价值观也有了变化，喜欢购物，花钱，穿好看的。没有了高中那种一花钱就想到父母的辛苦。我觉得这样很不好，我要改变自己，虽然之前删游戏是一时之快，但是我想坚持下来，把更多的时间用在学习上。</p><h4 id="改进之处"><a href="#改进之处" class="headerlink" title="改进之处"></a>改进之处</h4><ul><li>把更多的时间花在学习和陪你上</li><li><p>脾气暴躁需要改改，以后多读书，去图书馆借本自控力的书，每天阅读半个小时</p></li><li><p>爱说脏话，这个要改，但是没啥很好的方法，就平时多自己注意吧</p></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>自己写完这些字，心情果然好了点。继续加油，明天会是美好的一天！加油！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNc79ly1fqrpbkpmtwj31kw0zk49k.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天是怎么了，或者说这几天是怎么了，天天惹你生气，心情很烦躁，我准备开始写日记，抒发一下自己的心情，要不我可能会被憋死的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="心情笔记" scheme="http://fengxru.cn/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="丹岑" scheme="http://fengxru.cn/tags/%E4%B8%B9%E5%B2%91/"/>
    
      <category term="心情" scheme="http://fengxru.cn/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://fengxru.cn/hello-world/"/>
    <id>http://fengxru.cn/hello-world/</id>
    <published>2017-11-07T15:46:15.000Z</published>
    <updated>2018-05-09T05:06:22.250Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fl9vx0z3xpj30l30bugll.jpg" alt=""></p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using <a id="more"></a>Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1fl9vx0z3xpj30l30bugll.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iTerm 2 实用快捷键</title>
    <link href="http://fengxru.cn/iTerm%202%20%E5%AE%9E%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://fengxru.cn/iTerm 2 实用快捷键/</id>
    <published>2017-11-02T15:47:44.000Z</published>
    <updated>2018-05-09T04:20:59.161Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/large/006tNc79ly1fl9vptkwalj314m0eejv7.jpg" alt=""></p> <a id="more"></a><ul><li>⌘ + Click：可以打开文件，文件夹和链接</li><li>⌘ + n：新建窗口</li><li>⌘ + t：新建标签页</li><li>⌘ + w：关闭当前页</li><li>⌘ + 数字 &amp; ⌘ + 方向键：切换标签页</li><li>⌥⌘ + 数字：切换窗口</li><li>⌘ + enter：切换全屏</li><li>⌘ + d：左右分屏ß</li><li>⇧⌘ + d：上下分屏</li><li>⌘ + ;：自动补全历史记录</li><li>⇧⌘ + h：自动补全剪贴板历史</li><li>⌥⌘ + e：查找所有来定位某个标签页</li><li>⌘ + r &amp; ⌃ + l：清屏</li><li>⌘ + /：显示光标位置</li><li>⌥⌘ + b：历史回放</li><li>⌘ + f：查找，然后用 tab 和 ⇧ + tab 可以向右和向左补全，补全之后的内容会被自动复制， 还可以用 ⌥ + enter 将查找结果输入终端</li><li>选中即复制，鼠标中键粘贴</li></ul><p>很多快捷键都是通用的，和 Emace 等都是一样的</p><ul><li>⌃ + u：清空当前行</li><li>⌃ + a：移动到行首</li><li>⌃ + e：移动到行尾</li><li>⌃ + f：向前移动</li><li>⌃ + b：向后移动</li><li>⌃ + p：上一条命令</li><li>⌃ + n：下一条命令</li><li>⌃ + r：搜索历史命令</li><li>⌃ + y：召回最近用命令删除的文字</li><li>⌃ + h：删除光标之前的字符</li><li>⌃ + d：删除光标所指的字符</li><li>⌃ + w：删除光标之前的单词</li><li>⌃ + k：删除从光标到行尾的内容</li><li>⌃ + t：交换光标和之前的字符</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNc79ly1fl9vptkwalj314m0eejv7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://fengxru.cn/categories/Mac/"/>
    
    
      <category term="Mac" scheme="http://fengxru.cn/tags/Mac/"/>
    
      <category term="iTem2" scheme="http://fengxru.cn/tags/iTem2/"/>
    
  </entry>
  
  <entry>
    <title>密钥分发中心（KDC）</title>
    <link href="http://fengxru.cn/%E5%AF%86%E9%92%A5%E5%88%86%E5%8F%91%E4%B8%AD%E5%BF%83%EF%BC%88KDC%EF%BC%89/"/>
    <id>http://fengxru.cn/密钥分发中心（KDC）/</id>
    <published>2017-11-02T15:46:15.000Z</published>
    <updated>2017-11-07T14:17:11.959Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws1.sinaimg.cn/large/006tNc79ly1fl9vriv380j30rs0kuads.jpg" alt=""></p><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><blockquote><p>密钥分发中心是一种运行在物理安全服务器上的服务，KDC维护着领域中所有安全主体账户信息数据库。</p><p>与每一个安全主体的其他信息一起，KDC存储了仅安全主体和KDC知道的加密密钥，这个密钥也称长效密钥（主密钥），用于在安全主体和KDC之间进行交换。</p></blockquote> <a id="more"></a><blockquote><p>KDC是作为发起方和接收方共同信任的第三方，因为他维护者一个存储着该域中所有账户的账户数据库，也就是说，他知道属于每个账户的名称和派生于该账户密码的Master Key（主密钥）。而用于Alice和Bob相互认证的会话密钥就是由KDC分发的，下面详细讲解KDC分发会话密钥的过程。</p></blockquote><h3 id="分发会话密钥过程"><a href="#分发会话密钥过程" class="headerlink" title="分发会话密钥过程"></a>分发会话密钥过程</h3><p>1、首先客户端向KDC发送一个会话密钥申请。这个申请的内容可以简单概括为”我是某客户端，我需要个Session Key用于与某服务器通话“。</p><p>2、KDC在接收到这个请求的时候，生成一个会话密钥。为了保证这个会话密钥仅仅限于发送请求的客户端和它希望访问的服务器知道，KDC会为这个会话密钥生成两个副本，分别被客户端和服务器使用。然后从账户数据库中提取客户端和服务器的主密钥分别对这两个副本进行对称加密。对于服务器，与会话密钥一起被加密的还包含关于客户端的一些信息，以便对发起连接请求的客户端进行身份认证。</p><pre><code>注意：KDC不是直接把这两个会话密钥副本分发客户端和服务器的，因为如果这样做，对于服务器来说会出现下面两个问题。由于一个服务器会面对若干不同的客户端，而每个客户端都具有一个不同的Session Key。那么服务器就会为所有的客户端维护这样一个会话密钥的列表，这样对服务器来说工作量就非常 大了。由于网络传输的不确定性，可能会出现这样一种情况：客户端很快获得会话密钥用于副本，并将 这个会话密钥作为凭据随同访问请求发送到服务器，但是用于服务器的会话密钥却还没有收到，并且很 有可能这个会话密钥永远也到不了服务器端，这样客户端将永远得不到认证。为了解决这个问题， Kerberos将这两个被加密的副本一同发送给客户端，属于服务器的那份由客户端发送给服务器。因为 这两个会话密钥副本分别是由客户端和服务器端的主密钥加密的，所以不用担心安全问题。</code></pre><p>3、通过上面的过程，客户端实际上获得了两组信息：一个是通过自己主密钥加密的会话密钥；另一个是被Server的主密钥加密的数据包，包含会话密钥和关于自己的一些确认信息。在这个基础上，我们再来看看服务器是如何对客户端进行认证的。</p><p>4、客户端通过用自己的主密钥对KDC加密的会话密钥进行解密从而获得会话密钥，随后创建认证符（Authenticator，包括客户端信息和时间戳（Timestamp）），并用会话密钥对其加密。最后连同从KDC获得的、被服务器的主密钥加密过的数据包（客户端信息和会话密钥）一并发送到服务器端。我们把通过服务器的主密钥加密过的数据包称为服务票证（Session Ticket）。</p><p>5、当服务器接收到这两组数据后，先使用它自己的主密钥对服务票证进行解密，从而获得会话密钥。随后使用该会话密钥解密认证符，通过比较由客户端发送来的认证符中的客户端信息（Client Info）和服务票证中的客户端信息实现对客户端身份的验证。</p><p>双方进行了身份认证的同时也获得了会话密钥，那么双方可以进行会话了。</p><p>流程图如下：</p><p>客户端简称为Alice，服务端简称为Bob</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fk4ams2bxcj30tw0buab9.jpg" alt=""></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><a href="http://book.51cto.com/art/200907/140554.htm" target="_blank" rel="external">参考文章</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/006tNc79ly1fl9vriv380j30rs0kuads.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;简言&quot;&gt;&lt;a href=&quot;#简言&quot; class=&quot;headerlink&quot; title=&quot;简言&quot;&gt;&lt;/a&gt;简言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;密钥分发中心是一种运行在物理安全服务器上的服务，KDC维护着领域中所有安全主体账户信息数据库。&lt;/p&gt;
&lt;p&gt;与每一个安全主体的其他信息一起，KDC存储了仅安全主体和KDC知道的加密密钥，这个密钥也称长效密钥（主密钥），用于在安全主体和KDC之间进行交换。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://fengxru.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="KDC" scheme="http://fengxru.cn/tags/KDC/"/>
    
      <category term="密钥" scheme="http://fengxru.cn/tags/%E5%AF%86%E9%92%A5/"/>
    
  </entry>
  
</feed>
